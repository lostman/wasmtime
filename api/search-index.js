var N=null,E="",T="t",U="u",searchIndex={};
var R=["Global","Memory","AnyRef","FuncRef","hostref","option","callable","functype","global","globaltype","tabletype","memorytype","instance","instancehandle","compilationstrategy","mutability","valtype","limits","externtype","default","wasm_externkind_t","wasm_valkind_t","wasm_mutability_t","wasm_memory_pages_t","wasm_table_size_t","wasm_func_callback_t","wasm_func_callback_with_env_t","wasmtime_api","result","borrow_mut","try_from","try_into","type_id","borrow","typeid","to_owned","clone_into","to_string","wasmtime_api::wasm","anyref","importtype","exporttype","wasm_byte_vec_t","wasm_config_t","wasm_engine_t","wasm_store_t","wasm_limits_t","wasm_valtype_t","wasm_valtype_vec_t","wasm_functype_t","wasm_functype_vec_t","wasm_globaltype_t","wasm_globaltype_vec_t","wasm_tabletype_t","wasm_tabletype_vec_t","wasm_memorytype_t","wasm_memorytype_vec_t","wasm_externtype_t","wasm_externtype_vec_t","wasm_importtype_t","wasm_importtype_vec_t","wasm_exporttype_t","wasm_exporttype_vec_t","wasm_ref_t","wasm_val_t","wasm_val_t__bindgen_ty_1","wasm_val_vec_t","wasm_frame_t","wasm_frame_vec_t","wasm_instance_t","wasm_trap_t","wasm_foreign_t","wasm_module_t","wasm_shared_module_t","wasm_func_t","wasm_global_t","wasm_table_t","wasm_memory_t","wasm_extern_t","wasm_extern_vec_t","memory","wasm_byte_t","string","formatter","finalize","Mutability","ExternType","Instance","FuncType","GlobalType","TableType","MemoryType","ImportType","ExportType","Callable","HostInfo","wasmtime_debug","debuginfodata","modulevmctxinfo","targetfrontendconfig","moduleaddressmap","valuelabelsranges","DebugInfoData","WasmFileInfo","ResolvedSymbol","SymbolResolver","code_offset","Our chosen implementation style.","A compilation error occured.","wasmtime_environ","signature","compiledfunction","definedfuncindex","primarymap","jumptableoffsets","for_memory","tunables","for_table","funcindex","table_index","tableindex","definedtableindex","memory_index","memoryindex","definedmemoryindex","globalindex","definedglobalindex","moduletranslation","The offset of the `vmctx` field.","The size of the `current_elements` field.","The offset of the `from` field.","The offset of the `base` field.","The offset of the `tables` array.","The offset of the `memories` array.","The offset of the `globals` array.","Return the offset to the `base` field in…","functionbodydata","compileerror","equivalent","wasmtime_environ::cranelift","compile_module","targetisa","moduletranslationstate","instructionaddressmap","functionaddressmap","compilation","relocation","relocationtarget","trapinformation","ordering","codeoffset","serialize","deserialize","target_config","wasmresult","signatureindex","FunctionAddressMap","InstructionAddressMap","ModuleVmctxInfo","CompiledFunction","Relocation","TrapInformation","MemoryPlan","TableElements","TablePlan","DataInitializer","DataInitializerLocation","FunctionBodyData","ModuleTranslation","VMOffsets","CompileError","RelocationTarget","MemoryStyle","TableStyle","Compilation","BuiltinFunctionIndex","ModuleEnvironment","TargetSharedSignatureIndex","RelocSink","Cranelift","moduledata","exportbinding","ModuleData","ExportBinding","Compiler","wasmtime_jit","wasmtime_jit::ActionOutcome","A wasm translation error occured.","setuperror","linkerror","signatures","compiler","features","unknowninstance","actionerror","compiledmodule","contexterror","actionoutcome","Get the value of an exported global variable from an…","refcell","resolver","gdbjitimageregistration","boxedslice","vmsharedsignatureindex","instantiate","instantiationerror","name_instance","get_instance","Version number of this crate.","as_fail","runtimevalue","Return a reference-counting pointer to a module.","module_ref","Return a reference to a module.","vmcontext","vmcallercheckedanyfunc","InstantiationError","ActionError","ActionOutcome","RuntimeValue","CompilationStrategy","ContextError","SetupError","CodeMemory","CompiledModule","Namespace","InstanceHandle","UnknownInstance","NullResolver","relocations","artifact","functions","A handle holding an `Instance` of a WebAssembly module.","The fields compiled code needs to access to utilize a…","wasmtime_runtime","wasmtime_runtime::Export","Pointer to the containing `VMContext`.","definition","An error while instantiating a module.","Insufficient resources available for execution.","A wasm link error occured.","StartTrap","trapregistry","tableplan","memoryplan","vmtableimport","vmfunctionimport","vmmemoryimport","vmglobalimport","Create a new `InstanceHandle` pointing at a new `Instance`.","hashmap","imports","from_vmctx","Create a new `InstanceHandle` pointing at the instance…","Return a reference to the vmctx used by compiled wasm code.","vmctx_ptr","Return a raw pointer to the vmctx used by compiled wasm…","vmctx_mut","Return a mutable reference to the vmctx used by compiled…","vmctx_mut_ptr","Return a mutable raw pointer to the vmctx used by compiled…","Lookup an export with the given name.","lookup_immutable","Lookup an export with the given name. This takes an…","lookup_by_declaration","Lookup an export with the given export declaration.","lookup_immutable_by_declaration","Lookup an export with the given export declaration. This…","Return an iterator over the exports of this instance.","host_state","Return a reference to the custom state attached to this…","Return the memory index for the given `VMMemoryDefinition`…","vmmemorydefinition","memory_grow","Grow memory in this instance by the specified amount of…","Return the table index for the given `VMTableDefinition`…","vmtabledefinition","table_grow","Grow table in this instance by the specified amount of…","table_get","Get table element reference.","table_get_mut","Get mutable table element reference.","LinkError","VMCallerCheckedAnyfunc","VMFunctionImport","VMGlobalImport","VMMemoryDefinition","VMMemoryImport","VMTableDefinition","VMTableImport","GdbJitImageRegistration","SignatureRegistry","VMGlobalDefinition","VMSharedSignatureIndex","VMInvokeArgument","VMContext","TrapRegistrationGuard","VMFunctionBody","with_features","WastContext"];
searchIndex["wasm2obj"]={"doc":"Translation from wasm to native object files.","i":[],"p":[]};
searchIndex["wasmtime"]={"doc":E,"i":[[5,"pick_compilation_strategy","wasmtime",E,N,[[["bool"]],[R[14]]]],[5,"init_file_per_thread_logger",E,E,N,[[["str"]]]]],"p":[]};
searchIndex["wasmtime_api"]={"doc":"Wasmtime embed API. Based on wasm-c-api.","i":[[3,"Func",R[27],E,N,N],[3,R[0],E,E,N,N],[3,"Table",E,E,N,N],[3,R[1],E,E,N,N],[3,R[87],E,E,N,N],[3,"Module",E,E,N,N],[3,"HostRef",E,E,N,N],[3,"Config",E,E,N,N],[3,"Engine",E,E,N,N],[3,"Store",E,E,N,N],[3,"Trap",E,E,N,N],[3,"Limits",E,E,N,N],[3,R[88],E,E,N,N],[3,R[89],E,E,N,N],[3,R[90],E,E,N,N],[3,R[91],E,E,N,N],[3,"Name",E,E,N,N],[3,R[92],E,E,N,N],[3,R[93],E,E,N,N],[4,"Extern",E,E,N,N],[13,"Func",E,E,0,N],[13,R[0],E,E,0,N],[13,"Table",E,E,0,N],[13,R[1],E,E,0,N],[4,R[2],E,E,N,N],[13,"Null",E,E,1,N],[13,"Ref",E,E,1,N],[13,"Other",E,E,1,N],[4,R[85],E,E,N,N],[13,"Const",E,E,2,N],[13,"Var",E,E,2,N],[4,"ValType",E,E,N,N],[13,"I32",E,E,3,N],[13,"I64",E,E,3,N],[13,"F32",E,E,3,N],[13,"F64",E,E,3,N],[13,"V128",E,E,3,N],[13,R[2],E,E,3,N],[13,R[3],E,E,3,N],[4,R[86],E,E,N,N],[13,"ExternFunc",E,E,4,N],[13,"ExternGlobal",E,E,4,N],[13,"ExternTable",E,E,4,N],[13,"ExternMemory",E,E,4,N],[4,"Val",E,E,N,N],[13,"I32",E,E,5,N],[13,"I64",E,E,5,N],[13,"F32",E,E,5,N],[13,"F64",E,E,5,N],[13,R[2],E,E,5,N],[13,R[3],E,E,5,N],[11,"func",E,E,0,[[["self"]],[[R[5],[R[4]]],[R[4]]]]],[11,R[8],E,E,0,[[["self"]],[[R[5],[R[4]]],[R[4]]]]],[11,"table",E,E,0,[[["self"]],[[R[5],[R[4]]],[R[4]]]]],[11,R[80],E,E,0,[[["self"]],[[R[4]],[R[5],[R[4]]]]]],[11,"type",E,E,0,[[["self"]],[R[18]]]],[11,"new",E,E,6,[[["rc",[R[6]]],[R[4]],[R[7]],[R[6]]],["self"]]],[11,"type",E,E,6,[[["self"]],[R[7]]]],[11,"param_arity",E,E,6,[[["self"]],["usize"]]],[11,"result_arity",E,E,6,[[["self"]],["usize"]]],[11,"call",E,E,6,[[["self"]],[[R[4],["trap"]],[R[28],["box",R[4]]],["box"]]]],[11,"new",E,E,7,[[["val"],[R[9]],[R[4]]],[R[8]]]],[11,"type",E,E,7,[[["self"]],[R[9]]]],[11,"get",E,E,7,[[["self"]],["val"]]],[11,"set",E,E,7,[[["self"],["val"]]]],[11,"new",E,E,8,[[["val"],[R[4]],[R[10]]],["table"]]],[11,"type",E,E,8,[[["self"]],[R[10]]]],[11,"get",E,E,8,[[["self"],["u32"]],["val"]]],[11,"set",E,E,8,[[["self"],["u32"],["val"]],["bool"]]],[11,"size",E,E,8,[[["self"]],["u32"]]],[11,"grow",E,E,8,[[["self"],["u32"],["val"]],["bool"]]],[11,"new",E,E,9,[[[R[4]],[R[11]]],[R[80]]]],[11,"type",E,E,9,[[["self"]],[R[11]]]],[11,"data",E,E,9,[[["self"]]]],[11,"data_ptr",E,E,9,[[["self"]]]],[11,"data_size",E,E,9,[[["self"]],["usize"]]],[11,"size",E,E,9,[[["self"]],["u32"]]],[11,"grow",E,E,9,[[["self"],["u32"]],["bool"]]],[11,"new",E,E,10,[[[R[4]],[R[4]]],[[R[12]],[R[28],[R[12]]]]]],[11,"exports",E,E,10,[[["self"]]]],[11,"from_handle",E,E,10,[[[R[13]],[R[4]]],[R[28]]]],[11,"handle",E,E,10,[[["self"]],[R[13]]]],[11,"get_wasmtime_memory",E,E,10,[[["self"]],[["export"],[R[5],["export"]]]]],[11,"new",E,E,11,[[[R[4]]],[[R[28],["module"]],["module"]]]],[11,"validate",E,E,11,[[["store"]],["bool"]]],[11,R[251],E,E,11,[[["self"]]]],[11,"exports",E,E,11,[[["self"]]]],[11,"new",E,E,1,[[["any"],["box",["any"]]],["self"]]],[11,"null",E,E,1,[[],["self"]]],[11,"data",E,E,1,[[["self"]],[["ref",["box"]],["box",["any"]]]]],[11,"ptr_eq",E,E,1,[[["self"],[R[39]]],["bool"]]],[11,"host_info",E,E,1,[[["self"]],[[R[5],["refmut"]],["refmut",["box"]]]]],[11,"set_host_info",E,E,1,[[["self"],["box",["hostinfo"]],[R[5],["box"]]]]],[11,"new",E,E,12,[[[T]],[R[4]]]],[11,R[33],E,E,12,[[["self"]],["ref"]]],[11,R[29],E,E,12,[[["self"]],["refmut"]]],[11,"ptr_eq",E,E,12,[[["self"],[R[4]]],["bool"]]],[11,R[39],E,E,12,[[["self"]],[R[39]]]],[11,R[19],E,E,13,[[],["config"]]],[11,"new",E,E,13,[[[R[14]],["flags"],[R[192]],["bool"]],["config"]]],[11,"new",E,E,14,[[["config"]],["engine"]]],[11,R[19],E,E,14,[[],["engine"]]],[11,"create_wasmtime_context",E,E,14,[[["self"]],["context"]]],[11,"new",E,E,15,[[[R[4]]],["store"]]],[11,"engine",E,E,15,[[["self"]],[R[4]]]],[11,"global_exports",E,E,15,[[["self"]],["rc"]]],[11,"new",E,E,16,[[[R[82]]],["trap"]]],[11,"fake",E,E,16,[[],["trap"]]],[11,"message",E,E,16,[[["self"]],["str"]]],[11,"new",E,E,17,[[["u32"]],[R[17]]]],[11,"at_least",E,E,17,[[["u32"]],[R[17]]]],[11,"min",E,E,17,[[["self"]],["u32"]]],[11,"max",E,E,17,[[["self"]],["u32"]]],[11,"is_num",E,E,3,[[["self"]],["bool"]]],[11,"is_ref",E,E,3,[[["self"]],["bool"]]],[11,"func",E,E,4,[[["self"]],[R[7]]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"table",E,E,4,[[["self"]],[R[10]]]],[11,R[80],E,E,4,[[["self"]],[R[11]]]],[11,"new",E,E,18,[[["box"]],[R[7]]]],[11,"params",E,E,18,[[["self"]]]],[11,"results",E,E,18,[[["self"]]]],[11,"new",E,E,19,[[[R[15]],[R[16]]],[R[9]]]],[11,"content",E,E,19,[[["self"]],[R[16]]]],[11,R[15],E,E,19,[[["self"]],[R[15]]]],[11,"new",E,E,20,[[[R[17]],[R[16]]],[R[10]]]],[11,"element",E,E,20,[[["self"]],[R[16]]]],[11,R[17],E,E,20,[[["self"]],[R[17]]]],[11,"new",E,E,21,[[[R[17]]],[R[11]]]],[11,R[17],E,E,21,[[["self"]],[R[17]]]],[11,"new",E,E,22,[[[R[18]],["name"]],[R[40]]]],[11,"module",E,E,22,[[["self"]],["name"]]],[11,"name",E,E,22,[[["self"]],["name"]]],[11,"type",E,E,22,[[["self"]],[R[18]]]],[11,"new",E,E,23,[[[R[18]],["name"]],[R[41]]]],[11,"name",E,E,23,[[["self"]],["name"]]],[11,"type",E,E,23,[[["self"]],[R[18]]]],[11,R[19],E,E,5,[[],["val"]]],[11,"type",E,E,5,[[["self"]],[R[16]]]],[11,"from_f32_bits",E,E,5,[[["u32"]],["val"]]],[11,"from_f64_bits",E,E,5,[[["u64"]],["val"]]],[11,"i32",E,E,5,[[["self"]],["i32"]]],[11,"i64",E,E,5,[[["self"]],["i64"]]],[11,"f32",E,E,5,[[["self"]],["f32"]]],[11,"f64",E,E,5,[[["self"]],["f64"]]],[11,"f32_bits",E,E,5,[[["self"]],["u32"]]],[11,"f64_bits",E,E,5,[[["self"]],["u64"]]],[0,"wasm",E,"This file defines the extern \"C\" API, which is compatible…",N,N],[3,R[42],R[38],E,N,N],[12,"size",E,E,24,N],[12,"data",E,E,24,N],[3,R[43],E,E,N,N],[3,R[44],E,E,N,N],[3,R[45],E,E,N,N],[3,R[46],E,E,N,N],[12,"min",E,E,25,N],[12,"max",E,E,25,N],[3,R[47],E,E,N,N],[3,R[48],E,E,N,N],[12,"size",E,E,26,N],[12,"data",E,E,26,N],[3,R[49],E,E,N,N],[3,R[50],E,E,N,N],[12,"size",E,E,27,N],[12,"data",E,E,27,N],[3,R[51],E,E,N,N],[3,R[52],E,E,N,N],[12,"size",E,E,28,N],[12,"data",E,E,28,N],[3,R[53],E,E,N,N],[3,R[54],E,E,N,N],[12,"size",E,E,29,N],[12,"data",E,E,29,N],[3,R[55],E,E,N,N],[3,R[56],E,E,N,N],[12,"size",E,E,30,N],[12,"data",E,E,30,N],[3,R[57],E,E,N,N],[3,R[58],E,E,N,N],[12,"size",E,E,31,N],[12,"data",E,E,31,N],[3,R[59],E,E,N,N],[3,R[60],E,E,N,N],[12,"size",E,E,32,N],[12,"data",E,E,32,N],[3,R[61],E,E,N,N],[3,R[62],E,E,N,N],[12,"size",E,E,33,N],[12,"data",E,E,33,N],[3,R[63],E,E,N,N],[3,R[64],E,E,N,N],[12,"kind",E,E,34,N],[12,"of",E,E,34,N],[3,R[66],E,E,N,N],[12,"size",E,E,35,N],[12,"data",E,E,35,N],[3,R[67],E,E,N,N],[3,R[68],E,E,N,N],[12,"size",E,E,36,N],[12,"data",E,E,36,N],[3,R[69],E,E,N,N],[3,R[70],E,E,N,N],[3,R[71],E,E,N,N],[3,R[72],E,E,N,N],[3,R[73],E,E,N,N],[3,R[74],E,E,N,N],[3,R[75],E,E,N,N],[3,R[76],E,E,N,N],[3,R[77],E,E,N,N],[3,R[78],E,E,N,N],[3,R[79],E,E,N,N],[12,"size",E,E,37,N],[12,"data",E,E,37,N],[19,R[65],E,E,N,N],[12,"i32",E,E,38,N],[12,"i64",E,E,38,N],[12,"u32",E,E,38,N],[12,"u64",E,E,38,N],[12,"f32",E,E,38,N],[12,"f64",E,E,38,N],[12,"ref_",E,E,38,N],[5,"wasm_byte_vec_delete",E,E,N,[[]]],[5,"wasm_byte_vec_new_uninitialized",E,E,N,[[["usize"]]]],[5,"wasm_engine_delete",E,E,N,[[]]],[5,"wasm_engine_new",E,E,N,[[]]],[5,"wasm_extern_as_func",E,E,N,[[]]],[5,"wasm_extern_vec_delete",E,E,N,[[]]],[5,"wasm_func_as_extern",E,E,N,[[]]],[5,"wasm_func_call",E,E,N,[[]]],[5,"wasm_func_new",E,E,N,[[[R[25]]]]],[5,"wasm_func_delete",E,E,N,[[]]],[5,"wasm_functype_new",E,E,N,[[]]],[5,"wasm_functype_delete",E,E,N,[[]]],[5,"wasm_instance_delete",E,E,N,[[]]],[5,"wasm_instance_new",E,E,N,[[]]],[5,"wasm_instance_exports",E,E,N,[[]]],[5,"wasm_module_delete",E,E,N,[[]]],[5,"wasm_module_new",E,E,N,[[]]],[5,"wasm_store_delete",E,E,N,[[]]],[5,"wasm_store_new",E,E,N,[[]]],[5,"wasm_valtype_vec_new_empty",E,E,N,[[]]],[5,"wasm_valtype_vec_new",E,E,N,[[["usize"]]]],[5,"wasm_valtype_vec_new_uninitialized",E,E,N,[[["usize"]]]],[5,"wasm_func_new_with_env",E,E,N,[[[R[5]],[R[26]]]]],[5,"wasm_val_copy",E,E,N,[[]]],[5,"wasm_valtype_new",E,E,N,[[[R[21]]]]],[5,"wasm_valtype_delete",E,E,N,[[]]],[5,"wasm_byte_vec_new",E,E,N,[[["usize"]]]],[5,"wasm_frame_delete",E,E,N,[[]]],[5,"wasm_frame_func_index",E,E,N,[[],["u32"]]],[5,"wasm_frame_func_offset",E,E,N,[[],["usize"]]],[5,"wasm_frame_instance",E,E,N,[[]]],[5,"wasm_frame_module_offset",E,E,N,[[],["usize"]]],[5,"wasm_frame_vec_delete",E,E,N,[[]]],[5,"wasm_trap_delete",E,E,N,[[]]],[5,"wasm_trap_new",E,E,N,[[]]],[5,"wasm_trap_message",E,E,N,[[]]],[5,"wasm_trap_origin",E,E,N,[[]]],[5,"wasm_trap_trace",E,E,N,[[]]],[5,"wasm_importtype_module",E,E,N,[[]]],[5,"wasm_importtype_name",E,E,N,[[]]],[5,"wasm_importtype_type",E,E,N,[[]]],[5,"wasm_importtype_vec_delete",E,E,N,[[]]],[5,"wasm_exporttype_name",E,E,N,[[]]],[5,"wasm_exporttype_type",E,E,N,[[]]],[5,"wasm_exporttype_vec_delete",E,E,N,[[]]],[5,"wasm_extern_kind",E,E,N,[[],[R[20]]]],[5,"wasm_extern_type",E,E,N,[[]]],[5,"wasm_externtype_as_functype_const",E,E,N,[[]]],[5,"wasm_externtype_as_globaltype_const",E,E,N,[[]]],[5,"wasm_externtype_as_tabletype_const",E,E,N,[[]]],[5,"wasm_externtype_as_memorytype_const",E,E,N,[[]]],[5,"wasm_externtype_delete",E,E,N,[[]]],[5,"wasm_externtype_kind",E,E,N,[[],[R[20]]]],[5,"wasm_func_param_arity",E,E,N,[[],["usize"]]],[5,"wasm_func_result_arity",E,E,N,[[],["usize"]]],[5,"wasm_functype_params",E,E,N,[[]]],[5,"wasm_functype_results",E,E,N,[[]]],[5,"wasm_globaltype_content",E,E,N,[[]]],[5,"wasm_globaltype_mutability",E,E,N,[[],[R[22]]]],[5,"wasm_memorytype_limits",E,E,N,[[]]],[5,"wasm_module_exports",E,E,N,[[]]],[5,"wasm_module_imports",E,E,N,[[]]],[5,"wasm_tabletype_element",E,E,N,[[]]],[5,"wasm_tabletype_limits",E,E,N,[[]]],[5,"wasm_valtype_kind",E,E,N,[[],[R[21]]]],[5,"wasm_extern_as_global",E,E,N,[[]]],[5,"wasm_global_as_extern",E,E,N,[[]]],[5,"wasm_global_delete",E,E,N,[[]]],[5,"wasm_global_copy",E,E,N,[[]]],[5,"wasm_global_same",E,E,N,[[],["bool"]]],[5,"wasm_global_new",E,E,N,[[]]],[5,"wasm_global_get",E,E,N,[[]]],[5,"wasm_global_set",E,E,N,[[]]],[5,"wasm_globaltype_delete",E,E,N,[[]]],[5,"wasm_globaltype_new",E,E,N,[[[R[22]]]]],[5,"wasm_extern_as_memory",E,E,N,[[]]],[5,"wasm_memory_as_extern",E,E,N,[[]]],[5,"wasm_memory_delete",E,E,N,[[]]],[5,"wasm_memory_copy",E,E,N,[[]]],[5,"wasm_memory_same",E,E,N,[[],["bool"]]],[5,"wasm_memory_data",E,E,N,[[]]],[5,"wasm_memory_data_size",E,E,N,[[],["usize"]]],[5,"wasm_memory_size",E,E,N,[[],[R[23]]]],[5,"wasm_memory_grow",E,E,N,[[[R[23]]],["bool"]]],[5,"wasm_memory_new",E,E,N,[[]]],[5,"wasm_memorytype_delete",E,E,N,[[]]],[5,"wasm_memorytype_new",E,E,N,[[]]],[5,"wasm_extern_as_table",E,E,N,[[]]],[5,"wasm_table_as_extern",E,E,N,[[]]],[5,"wasm_func_as_ref",E,E,N,[[]]],[5,"wasm_ref_delete",E,E,N,[[]]],[5,"wasm_table_delete",E,E,N,[[]]],[5,"wasm_table_copy",E,E,N,[[]]],[5,"wasm_table_new",E,E,N,[[]]],[5,"wasm_table_get",E,E,N,[[[R[24]]]]],[5,"wasm_table_set",E,E,N,[[[R[24]]],["bool"]]],[5,"wasm_table_size",E,E,N,[[],[R[24]]]],[5,"wasm_table_grow",E,E,N,[[[R[24]]],["bool"]]],[5,"wasm_table_same",E,E,N,[[],["bool"]]],[5,"wasm_tabletype_delete",E,E,N,[[]]],[5,"wasm_tabletype_new",E,E,N,[[]]],[5,"wasm_instance_set_host_info_with_finalizer",E,E,N,[[[R[5]]]]],[5,"wasm_valtype_vec_copy",E,E,N,[[]]],[6,"float32_t",E,E,N,N],[6,"float64_t",E,E,N,N],[6,R[81],E,E,N,N],[6,"wasm_name_t",E,E,N,N],[6,R[22],E,E,N,N],[6,R[21],E,E,N,N],[6,R[20],E,E,N,N],[6,"wasm_message_t",E,E,N,N],[6,R[25],E,E,N,N],[6,R[26],E,E,N,N],[6,R[24],E,E,N,N],[6,R[23],E,E,N,N],[8,R[94],R[27],E,N,N],[10,"call",E,E,39,[[["self"]],[[R[28],[R[4]]],[R[4],["trap"]]]]],[8,R[95],E,E,N,N],[11,R[84],E,E,40,[[["self"]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[30],E,E,6,[[[U]],[R[28]]]],[11,R[31],E,E,6,[[],[R[28]]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[33],E,E,6,[[["self"]],[T]]],[11,R[32],E,E,6,[[["self"]],[R[34]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[30],E,E,7,[[[U]],[R[28]]]],[11,R[31],E,E,7,[[],[R[28]]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[33],E,E,7,[[["self"]],[T]]],[11,R[32],E,E,7,[[["self"]],[R[34]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[30],E,E,8,[[[U]],[R[28]]]],[11,R[31],E,E,8,[[],[R[28]]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[33],E,E,8,[[["self"]],[T]]],[11,R[32],E,E,8,[[["self"]],[R[34]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[30],E,E,9,[[[U]],[R[28]]]],[11,R[31],E,E,9,[[],[R[28]]]],[11,R[29],E,E,9,[[["self"]],[T]]],[11,R[33],E,E,9,[[["self"]],[T]]],[11,R[32],E,E,9,[[["self"]],[R[34]]]],[11,R[35],E,E,10,[[["self"]],[T]]],[11,R[36],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[30],E,E,10,[[[U]],[R[28]]]],[11,R[31],E,E,10,[[],[R[28]]]],[11,R[29],E,E,10,[[["self"]],[T]]],[11,R[33],E,E,10,[[["self"]],[T]]],[11,R[32],E,E,10,[[["self"]],[R[34]]]],[11,R[35],E,E,11,[[["self"]],[T]]],[11,R[36],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[30],E,E,11,[[[U]],[R[28]]]],[11,R[31],E,E,11,[[],[R[28]]]],[11,R[29],E,E,11,[[["self"]],[T]]],[11,R[33],E,E,11,[[["self"]],[T]]],[11,R[32],E,E,11,[[["self"]],[R[34]]]],[11,R[35],E,E,12,[[["self"]],[T]]],[11,R[36],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[30],E,E,12,[[[U]],[R[28]]]],[11,R[31],E,E,12,[[],[R[28]]]],[11,R[29],E,E,12,[[["self"]],[T]]],[11,R[33],E,E,12,[[["self"]],[T]]],[11,R[32],E,E,12,[[["self"]],[R[34]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[30],E,E,13,[[[U]],[R[28]]]],[11,R[31],E,E,13,[[],[R[28]]]],[11,R[29],E,E,13,[[["self"]],[T]]],[11,R[33],E,E,13,[[["self"]],[T]]],[11,R[32],E,E,13,[[["self"]],[R[34]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[30],E,E,14,[[[U]],[R[28]]]],[11,R[31],E,E,14,[[],[R[28]]]],[11,R[29],E,E,14,[[["self"]],[T]]],[11,R[33],E,E,14,[[["self"]],[T]]],[11,R[32],E,E,14,[[["self"]],[R[34]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[30],E,E,15,[[[U]],[R[28]]]],[11,R[31],E,E,15,[[],[R[28]]]],[11,R[29],E,E,15,[[["self"]],[T]]],[11,R[33],E,E,15,[[["self"]],[T]]],[11,R[32],E,E,15,[[["self"]],[R[34]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[37],E,E,16,[[["self"]],[R[82]]]],[11,R[30],E,E,16,[[[U]],[R[28]]]],[11,R[31],E,E,16,[[],[R[28]]]],[11,R[29],E,E,16,[[["self"]],[T]]],[11,R[33],E,E,16,[[["self"]],[T]]],[11,R[32],E,E,16,[[["self"]],[R[34]]]],[11,R[209],E,E,16,[[["self"]],["fail"]]],[11,R[35],E,E,17,[[["self"]],[T]]],[11,R[36],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[30],E,E,17,[[[U]],[R[28]]]],[11,R[31],E,E,17,[[],[R[28]]]],[11,R[29],E,E,17,[[["self"]],[T]]],[11,R[33],E,E,17,[[["self"]],[T]]],[11,R[32],E,E,17,[[["self"]],[R[34]]]],[11,R[35],E,E,18,[[["self"]],[T]]],[11,R[36],E,E,18,[[["self"],[T]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[30],E,E,18,[[[U]],[R[28]]]],[11,R[31],E,E,18,[[],[R[28]]]],[11,R[29],E,E,18,[[["self"]],[T]]],[11,R[33],E,E,18,[[["self"]],[T]]],[11,R[32],E,E,18,[[["self"]],[R[34]]]],[11,R[35],E,E,19,[[["self"]],[T]]],[11,R[36],E,E,19,[[["self"],[T]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[30],E,E,19,[[[U]],[R[28]]]],[11,R[31],E,E,19,[[],[R[28]]]],[11,R[29],E,E,19,[[["self"]],[T]]],[11,R[33],E,E,19,[[["self"]],[T]]],[11,R[32],E,E,19,[[["self"]],[R[34]]]],[11,R[35],E,E,20,[[["self"]],[T]]],[11,R[36],E,E,20,[[["self"],[T]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[30],E,E,20,[[[U]],[R[28]]]],[11,R[31],E,E,20,[[],[R[28]]]],[11,R[29],E,E,20,[[["self"]],[T]]],[11,R[33],E,E,20,[[["self"]],[T]]],[11,R[32],E,E,20,[[["self"]],[R[34]]]],[11,R[35],E,E,21,[[["self"]],[T]]],[11,R[36],E,E,21,[[["self"],[T]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[30],E,E,21,[[[U]],[R[28]]]],[11,R[31],E,E,21,[[],[R[28]]]],[11,R[29],E,E,21,[[["self"]],[T]]],[11,R[33],E,E,21,[[["self"]],[T]]],[11,R[32],E,E,21,[[["self"]],[R[34]]]],[11,R[35],E,E,41,[[["self"]],[T]]],[11,R[36],E,E,41,[[["self"],[T]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[37],E,E,41,[[["self"]],[R[82]]]],[11,R[30],E,E,41,[[[U]],[R[28]]]],[11,R[31],E,E,41,[[],[R[28]]]],[11,R[29],E,E,41,[[["self"]],[T]]],[11,R[33],E,E,41,[[["self"]],[T]]],[11,R[32],E,E,41,[[["self"]],[R[34]]]],[11,R[35],E,E,22,[[["self"]],[T]]],[11,R[36],E,E,22,[[["self"],[T]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[30],E,E,22,[[[U]],[R[28]]]],[11,R[31],E,E,22,[[],[R[28]]]],[11,R[29],E,E,22,[[["self"]],[T]]],[11,R[33],E,E,22,[[["self"]],[T]]],[11,R[32],E,E,22,[[["self"]],[R[34]]]],[11,R[35],E,E,23,[[["self"]],[T]]],[11,R[36],E,E,23,[[["self"],[T]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[30],E,E,23,[[[U]],[R[28]]]],[11,R[31],E,E,23,[[],[R[28]]]],[11,R[29],E,E,23,[[["self"]],[T]]],[11,R[33],E,E,23,[[["self"]],[T]]],[11,R[32],E,E,23,[[["self"]],[R[34]]]],[11,R[35],E,E,0,[[["self"]],[T]]],[11,R[36],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[30],E,E,0,[[[U]],[R[28]]]],[11,R[31],E,E,0,[[],[R[28]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[33],E,E,0,[[["self"]],[T]]],[11,R[32],E,E,0,[[["self"]],[R[34]]]],[11,R[35],E,E,1,[[["self"]],[T]]],[11,R[36],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[30],E,E,1,[[[U]],[R[28]]]],[11,R[31],E,E,1,[[],[R[28]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[33],E,E,1,[[["self"]],[T]]],[11,R[32],E,E,1,[[["self"]],[R[34]]]],[11,R[35],E,E,2,[[["self"]],[T]]],[11,R[36],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[30],E,E,2,[[[U]],[R[28]]]],[11,R[31],E,E,2,[[],[R[28]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[33],E,E,2,[[["self"]],[T]]],[11,R[32],E,E,2,[[["self"]],[R[34]]]],[11,R[35],E,E,3,[[["self"]],[T]]],[11,R[36],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[30],E,E,3,[[[U]],[R[28]]]],[11,R[31],E,E,3,[[],[R[28]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[33],E,E,3,[[["self"]],[T]]],[11,R[32],E,E,3,[[["self"]],[R[34]]]],[11,R[138],E,E,3,[[["self"],["k"]],["bool"]]],[11,R[35],E,E,4,[[["self"]],[T]]],[11,R[36],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[30],E,E,4,[[[U]],[R[28]]]],[11,R[31],E,E,4,[[],[R[28]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[33],E,E,4,[[["self"]],[T]]],[11,R[32],E,E,4,[[["self"]],[R[34]]]],[11,R[35],E,E,5,[[["self"]],[T]]],[11,R[36],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[30],E,E,5,[[[U]],[R[28]]]],[11,R[31],E,E,5,[[],[R[28]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[33],E,E,5,[[["self"]],[T]]],[11,R[32],E,E,5,[[["self"]],[R[34]]]],[11,R[35],R[38],E,24,[[["self"]],[T]]],[11,R[36],E,E,24,[[["self"],[T]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[30],E,E,24,[[[U]],[R[28]]]],[11,R[31],E,E,24,[[],[R[28]]]],[11,R[29],E,E,24,[[["self"]],[T]]],[11,R[33],E,E,24,[[["self"]],[T]]],[11,R[32],E,E,24,[[["self"]],[R[34]]]],[11,R[35],E,E,42,[[["self"]],[T]]],[11,R[36],E,E,42,[[["self"],[T]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[30],E,E,42,[[[U]],[R[28]]]],[11,R[31],E,E,42,[[],[R[28]]]],[11,R[29],E,E,42,[[["self"]],[T]]],[11,R[33],E,E,42,[[["self"]],[T]]],[11,R[32],E,E,42,[[["self"]],[R[34]]]],[11,R[35],E,E,43,[[["self"]],[T]]],[11,R[36],E,E,43,[[["self"],[T]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[30],E,E,43,[[[U]],[R[28]]]],[11,R[31],E,E,43,[[],[R[28]]]],[11,R[29],E,E,43,[[["self"]],[T]]],[11,R[33],E,E,43,[[["self"]],[T]]],[11,R[32],E,E,43,[[["self"]],[R[34]]]],[11,R[35],E,E,44,[[["self"]],[T]]],[11,R[36],E,E,44,[[["self"],[T]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[30],E,E,44,[[[U]],[R[28]]]],[11,R[31],E,E,44,[[],[R[28]]]],[11,R[29],E,E,44,[[["self"]],[T]]],[11,R[33],E,E,44,[[["self"]],[T]]],[11,R[32],E,E,44,[[["self"]],[R[34]]]],[11,R[35],E,E,25,[[["self"]],[T]]],[11,R[36],E,E,25,[[["self"],[T]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[30],E,E,25,[[[U]],[R[28]]]],[11,R[31],E,E,25,[[],[R[28]]]],[11,R[29],E,E,25,[[["self"]],[T]]],[11,R[33],E,E,25,[[["self"]],[T]]],[11,R[32],E,E,25,[[["self"]],[R[34]]]],[11,R[35],E,E,45,[[["self"]],[T]]],[11,R[36],E,E,45,[[["self"],[T]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[30],E,E,45,[[[U]],[R[28]]]],[11,R[31],E,E,45,[[],[R[28]]]],[11,R[29],E,E,45,[[["self"]],[T]]],[11,R[33],E,E,45,[[["self"]],[T]]],[11,R[32],E,E,45,[[["self"]],[R[34]]]],[11,R[35],E,E,26,[[["self"]],[T]]],[11,R[36],E,E,26,[[["self"],[T]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[30],E,E,26,[[[U]],[R[28]]]],[11,R[31],E,E,26,[[],[R[28]]]],[11,R[29],E,E,26,[[["self"]],[T]]],[11,R[33],E,E,26,[[["self"]],[T]]],[11,R[32],E,E,26,[[["self"]],[R[34]]]],[11,R[35],E,E,46,[[["self"]],[T]]],[11,R[36],E,E,46,[[["self"],[T]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[30],E,E,46,[[[U]],[R[28]]]],[11,R[31],E,E,46,[[],[R[28]]]],[11,R[29],E,E,46,[[["self"]],[T]]],[11,R[33],E,E,46,[[["self"]],[T]]],[11,R[32],E,E,46,[[["self"]],[R[34]]]],[11,R[35],E,E,27,[[["self"]],[T]]],[11,R[36],E,E,27,[[["self"],[T]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[30],E,E,27,[[[U]],[R[28]]]],[11,R[31],E,E,27,[[],[R[28]]]],[11,R[29],E,E,27,[[["self"]],[T]]],[11,R[33],E,E,27,[[["self"]],[T]]],[11,R[32],E,E,27,[[["self"]],[R[34]]]],[11,R[35],E,E,47,[[["self"]],[T]]],[11,R[36],E,E,47,[[["self"],[T]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[30],E,E,47,[[[U]],[R[28]]]],[11,R[31],E,E,47,[[],[R[28]]]],[11,R[29],E,E,47,[[["self"]],[T]]],[11,R[33],E,E,47,[[["self"]],[T]]],[11,R[32],E,E,47,[[["self"]],[R[34]]]],[11,R[35],E,E,28,[[["self"]],[T]]],[11,R[36],E,E,28,[[["self"],[T]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[30],E,E,28,[[[U]],[R[28]]]],[11,R[31],E,E,28,[[],[R[28]]]],[11,R[29],E,E,28,[[["self"]],[T]]],[11,R[33],E,E,28,[[["self"]],[T]]],[11,R[32],E,E,28,[[["self"]],[R[34]]]],[11,R[35],E,E,48,[[["self"]],[T]]],[11,R[36],E,E,48,[[["self"],[T]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[30],E,E,48,[[[U]],[R[28]]]],[11,R[31],E,E,48,[[],[R[28]]]],[11,R[29],E,E,48,[[["self"]],[T]]],[11,R[33],E,E,48,[[["self"]],[T]]],[11,R[32],E,E,48,[[["self"]],[R[34]]]],[11,R[35],E,E,29,[[["self"]],[T]]],[11,R[36],E,E,29,[[["self"],[T]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[30],E,E,29,[[[U]],[R[28]]]],[11,R[31],E,E,29,[[],[R[28]]]],[11,R[29],E,E,29,[[["self"]],[T]]],[11,R[33],E,E,29,[[["self"]],[T]]],[11,R[32],E,E,29,[[["self"]],[R[34]]]],[11,R[35],E,E,49,[[["self"]],[T]]],[11,R[36],E,E,49,[[["self"],[T]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[30],E,E,49,[[[U]],[R[28]]]],[11,R[31],E,E,49,[[],[R[28]]]],[11,R[29],E,E,49,[[["self"]],[T]]],[11,R[33],E,E,49,[[["self"]],[T]]],[11,R[32],E,E,49,[[["self"]],[R[34]]]],[11,R[35],E,E,30,[[["self"]],[T]]],[11,R[36],E,E,30,[[["self"],[T]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[30],E,E,30,[[[U]],[R[28]]]],[11,R[31],E,E,30,[[],[R[28]]]],[11,R[29],E,E,30,[[["self"]],[T]]],[11,R[33],E,E,30,[[["self"]],[T]]],[11,R[32],E,E,30,[[["self"]],[R[34]]]],[11,R[35],E,E,50,[[["self"]],[T]]],[11,R[36],E,E,50,[[["self"],[T]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[30],E,E,50,[[[U]],[R[28]]]],[11,R[31],E,E,50,[[],[R[28]]]],[11,R[29],E,E,50,[[["self"]],[T]]],[11,R[33],E,E,50,[[["self"]],[T]]],[11,R[32],E,E,50,[[["self"]],[R[34]]]],[11,R[35],E,E,31,[[["self"]],[T]]],[11,R[36],E,E,31,[[["self"],[T]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[30],E,E,31,[[[U]],[R[28]]]],[11,R[31],E,E,31,[[],[R[28]]]],[11,R[29],E,E,31,[[["self"]],[T]]],[11,R[33],E,E,31,[[["self"]],[T]]],[11,R[32],E,E,31,[[["self"]],[R[34]]]],[11,R[35],E,E,51,[[["self"]],[T]]],[11,R[36],E,E,51,[[["self"],[T]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[30],E,E,51,[[[U]],[R[28]]]],[11,R[31],E,E,51,[[],[R[28]]]],[11,R[29],E,E,51,[[["self"]],[T]]],[11,R[33],E,E,51,[[["self"]],[T]]],[11,R[32],E,E,51,[[["self"]],[R[34]]]],[11,R[35],E,E,32,[[["self"]],[T]]],[11,R[36],E,E,32,[[["self"],[T]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[30],E,E,32,[[[U]],[R[28]]]],[11,R[31],E,E,32,[[],[R[28]]]],[11,R[29],E,E,32,[[["self"]],[T]]],[11,R[33],E,E,32,[[["self"]],[T]]],[11,R[32],E,E,32,[[["self"]],[R[34]]]],[11,R[35],E,E,52,[[["self"]],[T]]],[11,R[36],E,E,52,[[["self"],[T]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[30],E,E,52,[[[U]],[R[28]]]],[11,R[31],E,E,52,[[],[R[28]]]],[11,R[29],E,E,52,[[["self"]],[T]]],[11,R[33],E,E,52,[[["self"]],[T]]],[11,R[32],E,E,52,[[["self"]],[R[34]]]],[11,R[35],E,E,33,[[["self"]],[T]]],[11,R[36],E,E,33,[[["self"],[T]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[30],E,E,33,[[[U]],[R[28]]]],[11,R[31],E,E,33,[[],[R[28]]]],[11,R[29],E,E,33,[[["self"]],[T]]],[11,R[33],E,E,33,[[["self"]],[T]]],[11,R[32],E,E,33,[[["self"]],[R[34]]]],[11,R[35],E,E,53,[[["self"]],[T]]],[11,R[36],E,E,53,[[["self"],[T]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[30],E,E,53,[[[U]],[R[28]]]],[11,R[31],E,E,53,[[],[R[28]]]],[11,R[29],E,E,53,[[["self"]],[T]]],[11,R[33],E,E,53,[[["self"]],[T]]],[11,R[32],E,E,53,[[["self"]],[R[34]]]],[11,R[35],E,E,34,[[["self"]],[T]]],[11,R[36],E,E,34,[[["self"],[T]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[30],E,E,34,[[[U]],[R[28]]]],[11,R[31],E,E,34,[[],[R[28]]]],[11,R[29],E,E,34,[[["self"]],[T]]],[11,R[33],E,E,34,[[["self"]],[T]]],[11,R[32],E,E,34,[[["self"]],[R[34]]]],[11,R[35],E,E,35,[[["self"]],[T]]],[11,R[36],E,E,35,[[["self"],[T]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[30],E,E,35,[[[U]],[R[28]]]],[11,R[31],E,E,35,[[],[R[28]]]],[11,R[29],E,E,35,[[["self"]],[T]]],[11,R[33],E,E,35,[[["self"]],[T]]],[11,R[32],E,E,35,[[["self"]],[R[34]]]],[11,R[35],E,E,54,[[["self"]],[T]]],[11,R[36],E,E,54,[[["self"],[T]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[30],E,E,54,[[[U]],[R[28]]]],[11,R[31],E,E,54,[[],[R[28]]]],[11,R[29],E,E,54,[[["self"]],[T]]],[11,R[33],E,E,54,[[["self"]],[T]]],[11,R[32],E,E,54,[[["self"]],[R[34]]]],[11,R[35],E,E,36,[[["self"]],[T]]],[11,R[36],E,E,36,[[["self"],[T]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[30],E,E,36,[[[U]],[R[28]]]],[11,R[31],E,E,36,[[],[R[28]]]],[11,R[29],E,E,36,[[["self"]],[T]]],[11,R[33],E,E,36,[[["self"]],[T]]],[11,R[32],E,E,36,[[["self"]],[R[34]]]],[11,R[35],E,E,55,[[["self"]],[T]]],[11,R[36],E,E,55,[[["self"],[T]]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[30],E,E,55,[[[U]],[R[28]]]],[11,R[31],E,E,55,[[],[R[28]]]],[11,R[29],E,E,55,[[["self"]],[T]]],[11,R[33],E,E,55,[[["self"]],[T]]],[11,R[32],E,E,55,[[["self"]],[R[34]]]],[11,R[35],E,E,56,[[["self"]],[T]]],[11,R[36],E,E,56,[[["self"],[T]]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[30],E,E,56,[[[U]],[R[28]]]],[11,R[31],E,E,56,[[],[R[28]]]],[11,R[29],E,E,56,[[["self"]],[T]]],[11,R[33],E,E,56,[[["self"]],[T]]],[11,R[32],E,E,56,[[["self"]],[R[34]]]],[11,R[35],E,E,57,[[["self"]],[T]]],[11,R[36],E,E,57,[[["self"],[T]]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[30],E,E,57,[[[U]],[R[28]]]],[11,R[31],E,E,57,[[],[R[28]]]],[11,R[29],E,E,57,[[["self"]],[T]]],[11,R[33],E,E,57,[[["self"]],[T]]],[11,R[32],E,E,57,[[["self"]],[R[34]]]],[11,R[35],E,E,58,[[["self"]],[T]]],[11,R[36],E,E,58,[[["self"],[T]]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[30],E,E,58,[[[U]],[R[28]]]],[11,R[31],E,E,58,[[],[R[28]]]],[11,R[29],E,E,58,[[["self"]],[T]]],[11,R[33],E,E,58,[[["self"]],[T]]],[11,R[32],E,E,58,[[["self"]],[R[34]]]],[11,R[35],E,E,59,[[["self"]],[T]]],[11,R[36],E,E,59,[[["self"],[T]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[30],E,E,59,[[[U]],[R[28]]]],[11,R[31],E,E,59,[[],[R[28]]]],[11,R[29],E,E,59,[[["self"]],[T]]],[11,R[33],E,E,59,[[["self"]],[T]]],[11,R[32],E,E,59,[[["self"]],[R[34]]]],[11,R[35],E,E,60,[[["self"]],[T]]],[11,R[36],E,E,60,[[["self"],[T]]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[30],E,E,60,[[[U]],[R[28]]]],[11,R[31],E,E,60,[[],[R[28]]]],[11,R[29],E,E,60,[[["self"]],[T]]],[11,R[33],E,E,60,[[["self"]],[T]]],[11,R[32],E,E,60,[[["self"]],[R[34]]]],[11,R[35],E,E,61,[[["self"]],[T]]],[11,R[36],E,E,61,[[["self"],[T]]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[30],E,E,61,[[[U]],[R[28]]]],[11,R[31],E,E,61,[[],[R[28]]]],[11,R[29],E,E,61,[[["self"]],[T]]],[11,R[33],E,E,61,[[["self"]],[T]]],[11,R[32],E,E,61,[[["self"]],[R[34]]]],[11,R[35],E,E,62,[[["self"]],[T]]],[11,R[36],E,E,62,[[["self"],[T]]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[30],E,E,62,[[[U]],[R[28]]]],[11,R[31],E,E,62,[[],[R[28]]]],[11,R[29],E,E,62,[[["self"]],[T]]],[11,R[33],E,E,62,[[["self"]],[T]]],[11,R[32],E,E,62,[[["self"]],[R[34]]]],[11,R[35],E,E,63,[[["self"]],[T]]],[11,R[36],E,E,63,[[["self"],[T]]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[30],E,E,63,[[[U]],[R[28]]]],[11,R[31],E,E,63,[[],[R[28]]]],[11,R[29],E,E,63,[[["self"]],[T]]],[11,R[33],E,E,63,[[["self"]],[T]]],[11,R[32],E,E,63,[[["self"]],[R[34]]]],[11,R[35],E,E,64,[[["self"]],[T]]],[11,R[36],E,E,64,[[["self"],[T]]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[30],E,E,64,[[[U]],[R[28]]]],[11,R[31],E,E,64,[[],[R[28]]]],[11,R[29],E,E,64,[[["self"]],[T]]],[11,R[33],E,E,64,[[["self"]],[T]]],[11,R[32],E,E,64,[[["self"]],[R[34]]]],[11,R[35],E,E,37,[[["self"]],[T]]],[11,R[36],E,E,37,[[["self"],[T]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[30],E,E,37,[[[U]],[R[28]]]],[11,R[31],E,E,37,[[],[R[28]]]],[11,R[29],E,E,37,[[["self"]],[T]]],[11,R[33],E,E,37,[[["self"]],[T]]],[11,R[32],E,E,37,[[["self"]],[R[34]]]],[11,R[35],E,E,38,[[["self"]],[T]]],[11,R[36],E,E,38,[[["self"],[T]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[30],E,E,38,[[[U]],[R[28]]]],[11,R[31],E,E,38,[[],[R[28]]]],[11,R[29],E,E,38,[[["self"]],[T]]],[11,R[33],E,E,38,[[["self"]],[T]]],[11,R[32],E,E,38,[[["self"]],[R[34]]]],[11,"call",R[27],E,65,[[["self"]],[[R[28],[R[4]]],[R[4],["trap"]]]]],[11,"drop",R[38],E,24,[[["self"]]]],[11,"drop",E,E,26,[[["self"]]]],[11,"drop",E,E,27,[[["self"]]]],[11,"drop",E,E,28,[[["self"]]]],[11,"drop",E,E,29,[[["self"]]]],[11,"drop",E,E,30,[[["self"]]]],[11,"drop",E,E,31,[[["self"]]]],[11,"drop",E,E,32,[[["self"]]]],[11,"drop",E,E,33,[[["self"]]]],[11,"drop",E,E,35,[[["self"]]]],[11,"drop",E,E,36,[[["self"]]]],[11,"drop",E,E,37,[[["self"]]]],[11,"into",R[27],E,5,[[],["i32"]]],[11,"into",E,E,5,[[],["i64"]]],[11,"into",E,E,5,[[],["f32"]]],[11,"into",E,E,5,[[],["f64"]]],[11,"into",E,E,5,[[],[R[39]]]],[11,"into",R[38],E,56,[[],[["trap"],[R[4],["trap"]]]]],[11,R[19],E,E,34,[[],["self"]]],[11,"clone",R[27],E,0,[[["self"]],["extern"]]],[11,"clone",E,E,10,[[["self"]],[R[12]]]],[11,"clone",E,E,11,[[["self"]],["module"]]],[11,"clone",E,E,1,[[["self"]],[R[39]]]],[11,"clone",E,E,12,[[["self"]],[R[4]]]],[11,"clone",E,E,2,[[["self"]],[R[15]]]],[11,"clone",E,E,17,[[["self"]],[R[17]]]],[11,"clone",E,E,3,[[["self"]],[R[16]]]],[11,"clone",E,E,4,[[["self"]],[R[18]]]],[11,"clone",E,E,18,[[["self"]],[R[7]]]],[11,"clone",E,E,19,[[["self"]],[R[9]]]],[11,"clone",E,E,20,[[["self"]],[R[10]]]],[11,"clone",E,E,21,[[["self"]],[R[11]]]],[11,"clone",E,E,41,[[["self"]],["name"]]],[11,"clone",E,E,22,[[["self"]],[R[40]]]],[11,"clone",E,E,23,[[["self"]],[R[41]]]],[11,"clone",E,E,5,[[["self"]],["val"]]],[11,"clone",R[38],E,24,[[["self"]],[R[42]]]],[11,"clone",E,E,42,[[["self"]],[R[43]]]],[11,"clone",E,E,43,[[["self"]],[R[44]]]],[11,"clone",E,E,44,[[["self"]],[R[45]]]],[11,"clone",E,E,25,[[["self"]],[R[46]]]],[11,"clone",E,E,45,[[["self"]],[R[47]]]],[11,"clone",E,E,26,[[["self"]],[R[48]]]],[11,"clone",E,E,46,[[["self"]],[R[49]]]],[11,"clone",E,E,27,[[["self"]],[R[50]]]],[11,"clone",E,E,47,[[["self"]],[R[51]]]],[11,"clone",E,E,28,[[["self"]],[R[52]]]],[11,"clone",E,E,48,[[["self"]],[R[53]]]],[11,"clone",E,E,29,[[["self"]],[R[54]]]],[11,"clone",E,E,49,[[["self"]],[R[55]]]],[11,"clone",E,E,30,[[["self"]],[R[56]]]],[11,"clone",E,E,50,[[["self"]],[R[57]]]],[11,"clone",E,E,31,[[["self"]],[R[58]]]],[11,"clone",E,E,51,[[["self"]],[R[59]]]],[11,"clone",E,E,32,[[["self"]],[R[60]]]],[11,"clone",E,E,52,[[["self"]],[R[61]]]],[11,"clone",E,E,33,[[["self"]],[R[62]]]],[11,"clone",E,E,53,[[["self"]],[R[63]]]],[11,"clone",E,E,34,[[["self"]],[R[64]]]],[11,"clone",E,E,38,[[["self"]],[R[65]]]],[11,"clone",E,E,35,[[["self"]],[R[66]]]],[11,"clone",E,E,54,[[["self"]],[R[67]]]],[11,"clone",E,E,36,[[["self"]],[R[68]]]],[11,"clone",E,E,55,[[["self"]],[R[69]]]],[11,"clone",E,E,56,[[["self"]],[R[70]]]],[11,"clone",E,E,57,[[["self"]],[R[71]]]],[11,"clone",E,E,58,[[["self"]],[R[72]]]],[11,"clone",E,E,59,[[["self"]],[R[73]]]],[11,"clone",E,E,60,[[["self"]],[R[74]]]],[11,"clone",E,E,61,[[["self"]],[R[75]]]],[11,"clone",E,E,62,[[["self"]],[R[76]]]],[11,"clone",E,E,63,[[["self"]],[R[77]]]],[11,"clone",E,E,64,[[["self"]],[R[78]]]],[11,"clone",E,E,37,[[["self"]],[R[79]]]],[11,"eq",R[27],E,3,[[["self"],[R[16]]],["bool"]]],[11,"from",E,E,0,[[[R[4],["func"]],["func"]],["self"]]],[11,"from",E,E,0,[[[R[8]],[R[4],[R[8]]]],["self"]]],[11,"from",E,E,0,[[[R[4],[R[80]]],[R[80]]],["self"]]],[11,"from",E,E,0,[[[R[4],["table"]],["table"]],["self"]]],[11,"from",E,E,41,[[[R[82]]],["name"]]],[11,"from",E,E,5,[[["i32"]],["val"]]],[11,"from",E,E,5,[[["i64"]],["val"]]],[11,"from",E,E,5,[[["f32"]],["val"]]],[11,"from",E,E,5,[[["f64"]],["val"]]],[11,"from",E,E,5,[[[R[39]]],["val"]]],[11,"from",E,E,5,[[[R[4],["func"]],["func"]],["val"]]],[11,"from",R[38],E,24,[[["vec",[R[81]]],[R[81]]],["self"]]],[11,"from",E,E,26,[[["vec"]],["self"]]],[11,"from",E,E,27,[[["vec"]],["self"]]],[11,"from",E,E,28,[[["vec"]],["self"]]],[11,"from",E,E,29,[[["vec"]],["self"]]],[11,"from",E,E,30,[[["vec"]],["self"]]],[11,"from",E,E,31,[[["vec"]],["self"]]],[11,"from",E,E,32,[[["vec"]],["self"]]],[11,"from",E,E,33,[[["vec"]],["self"]]],[11,"from",E,E,35,[[["vec",[R[64]]],[R[64]]],["self"]]],[11,"from",E,E,36,[[["vec"]],["self"]]],[11,"from",E,E,37,[[["vec"]],["self"]]],[11,R[37],R[27],E,41,[[["self"]],[R[82]]]],[11,"fmt",E,E,6,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,1,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,12,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,16,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,2,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,17,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,3,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,4,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,18,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,19,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,20,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,21,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,41,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,22,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,23,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,5,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,16,[[["self"],[R[83]]],[R[28]]]],[11,R[84],E,E,40,[[["self"]]]]],"p":[[4,"Extern"],[4,R[2]],[4,R[85]],[4,"ValType"],[4,R[86]],[4,"Val"],[3,"Func"],[3,R[0]],[3,"Table"],[3,R[1]],[3,R[87]],[3,"Module"],[3,"HostRef"],[3,"Config"],[3,"Engine"],[3,"Store"],[3,"Trap"],[3,"Limits"],[3,R[88]],[3,R[89]],[3,R[90]],[3,R[91]],[3,R[92]],[3,R[93]],[3,R[42]],[3,R[46]],[3,R[48]],[3,R[50]],[3,R[52]],[3,R[54]],[3,R[56]],[3,R[58]],[3,R[60]],[3,R[62]],[3,R[64]],[3,R[66]],[3,R[68]],[3,R[79]],[19,R[65]],[8,R[94]],[8,R[95]],[3,"Name"],[3,R[43]],[3,R[44]],[3,R[45]],[3,R[47]],[3,R[49]],[3,R[51]],[3,R[53]],[3,R[55]],[3,R[57]],[3,R[59]],[3,R[61]],[3,R[63]],[3,R[67]],[3,R[69]],[3,R[70]],[3,R[71]],[3,R[72]],[3,R[73]],[3,R[74]],[3,R[75]],[3,R[76]],[3,R[77]],[3,R[78]],[6,R[25]]]};
searchIndex["wasmtime_debug"]={"doc":"Debug utils for WebAssembly using Cranelift.","i":[[3,R[102],R[96],E,N,N],[12,"dwarf",E,E,0,N],[12,"name_section",E,E,0,N],[12,"wasm_file",E,E,0,N],[3,R[103],E,E,N,N],[12,"path",E,E,1,N],[12,"code_section_offset",E,E,1,N],[12,"funcs",E,E,1,N],[4,R[104],E,E,N,N],[13,"PhysicalAddress",E,E,2,N],[13,"Reloc",E,E,2,N],[12,"name","wasmtime_debug::ResolvedSymbol",E,2,N],[12,"addend",E,E,2,N],[5,"read_debuginfo",R[96],E,N,[[],[R[97]]]],[5,"transform_dwarf",E,E,N,[[[R[100]],[R[97]],[R[99]],[R[98]],[R[101]]],[["dwarf"],[R[28],["dwarf","error"]],["error"]]]],[5,"emit_dwarf",E,E,N,[[["dwarf"],["symbolresolver"],[R[230]]],[[R[28],["error"]],["error"]]]],[5,"emit_debugsections",E,E,N,[[[R[98]],[R[97]],[R[99]],[R[230]],[R[100]],[R[101]]],[[R[28],["error"]],["error"]]]],[5,"emit_debugsections_image",E,E,N,[[[R[98]],[R[97]],[R[99]],[R[100]],["triple"],[R[101]]],[["vec",["u8"]],[R[28],["vec","error"]],["error"]]]],[8,R[105],E,E,N,N],[10,"resolve_symbol",E,E,3,[[["self"],["i64"],["usize"]],["resolvedsymbol"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[30],E,E,0,[[[U]],[R[28]]]],[11,R[31],E,E,0,[[],[R[28]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[33],E,E,0,[[["self"]],[T]]],[11,R[32],E,E,0,[[["self"]],[R[34]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[30],E,E,1,[[[U]],[R[28]]]],[11,R[31],E,E,1,[[],[R[28]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[33],E,E,1,[[["self"]],[T]]],[11,R[32],E,E,1,[[["self"]],[R[34]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[30],E,E,2,[[[U]],[R[28]]]],[11,R[31],E,E,2,[[],[R[28]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[33],E,E,2,[[["self"]],[T]]],[11,R[32],E,E,2,[[["self"]],[R[34]]]],[11,"fmt",E,E,1,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,0,[[["self"],[R[83]]],[R[28]]]]],"p":[[3,R[102]],[3,R[103]],[4,R[104]],[8,R[105]]]};
searchIndex["wasmtime_environ"]={"doc":"Standalone environment for WebAssembly using Cranelift.…","i":[[3,R[156],R[109],"Function and its instructions addresses mappings.",N,N],[12,"instructions",E,"Instructions maps. The array is sorted by the…",0,N],[12,"start_srcloc",E,"Function start source location (normally declaration).",0,N],[12,"end_srcloc",E,"Function end source location.",0,N],[12,"body_offset",E,"Generated function body offset if applicable, otherwise 0.",0,N],[12,"body_len",E,"Generated function body length.",0,N],[3,R[157],E,"Single source location to generated address mapping.",N,N],[12,"srcloc",E,"Original source location.",1,N],[12,R[106],E,"Generated instructions offset.",1,N],[12,"code_len",E,"Generated instructions length.",1,N],[3,R[158],E,"Module `vmctx` related info.",N,N],[12,"memory_offset",E,"The memory definition offset in the VMContext structure.",2,N],[12,"stack_slots",E,"The functions stack slots.",2,N],[3,R[174],E,"The result of compiling a WebAssembly module's functions.",N,N],[3,R[159],E,"Compiled function: machine code body, jump table offsets,…",N,N],[12,"body",E,"The function body.",3,N],[12,"jt_offsets",E,"The jump tables offsets (in the body).",3,N],[12,"unwind_info",E,"The unwind information.",3,N],[3,R[160],E,"A record of a relocation to perform.",N,N],[12,"reloc",E,"The relocation code.",4,N],[12,"reloc_target",E,"Relocation target.",4,N],[12,"offset",E,"The offset where to apply the relocation.",4,N],[12,"addend",E,"The addend to add to the relocation value.",4,N],[3,R[161],E,"Information about trap.",N,N],[12,R[106],E,"The offset of the trapping instruction in native code. It…",5,N],[12,"source_loc",E,"Location of trapping instruction in WebAssembly binary…",5,N],[12,"trap_code",E,"Code of the trap.",5,N],[3,R[175],E,"An index type for builtin functions.",N,N],[3,R[162],E,"A WebAssembly linear memory description along with our…",N,N],[12,R[80],E,"The WebAssembly linear memory description.",6,N],[12,"style",E,R[107],6,N],[12,"offset_guard_size",E,"Our chosen offset-guard size.",6,N],[3,"Module",E,"A translated WebAssembly module, excluding the function…",N,N],[12,R[190],E,"Unprocessed signatures exactly as provided by…",7,N],[12,"imported_funcs",E,"Names of imported functions.",7,N],[12,"imported_tables",E,"Names of imported tables.",7,N],[12,"imported_memories",E,"Names of imported memories.",7,N],[12,"imported_globals",E,"Names of imported globals.",7,N],[12,R[231],E,"Types of functions, imported and local.",7,N],[12,"table_plans",E,"WebAssembly tables.",7,N],[12,"memory_plans",E,"WebAssembly linear memory plans.",7,N],[12,"globals",E,"WebAssembly global variables.",7,N],[12,"exports",E,"Exported entities.",7,N],[12,"start_func",E,"The module \"start\" function, if present.",7,N],[12,"table_elements",E,"WebAssembly table initializers.",7,N],[3,R[163],E,"A WebAssembly table initializer.",N,N],[12,R[119],E,"The index of a table to initialize.",8,N],[12,"base",E,"Optionally, a global variable giving a base index.",8,N],[12,"offset",E,"The offset to add to the base.",8,N],[12,"elements",E,"The values to write into the table elements.",8,N],[3,R[164],E,"A WebAssembly table description along with our chosen…",N,N],[12,"table",E,"The WebAssembly table description.",9,N],[12,"style",E,R[107],9,N],[3,R[165],E,"A data initializer for linear memory.",N,N],[12,"location",E,"The location where the initialization is to be performed.",10,N],[12,"data",E,"The initialization data.",10,N],[3,R[166],E,"A memory index and offset within that memory where a data…",N,N],[12,R[122],E,"The index of the memory to initialize.",11,N],[12,"base",E,"Optionally a globalvar base to initialize at.",11,N],[12,"offset",E,"A constant offset to initialize at.",11,N],[3,R[167],E,"Contains function data: byte code and its offset in the…",N,N],[12,"data",E,"Body byte code.",12,N],[12,"module_offset",E,"Body offset in the module file.",12,N],[3,R[176],E,"Object containing the standalone environment information.",N,N],[3,R[168],E,"The result of translating via `ModuleEnvironment`.…",N,N],[12,R[153],E,"Compilation setting flags.",13,N],[12,"module",E,"Module information.",13,N],[12,"function_body_inputs",E,"References to the function bodies.",13,N],[12,"data_initializers",E,"References to the data initializers.",13,N],[12,R[116],E,"Tunable parameters.",13,N],[12,"module_translation",E,"The decoded Wasm types for the module.",13,N],[3,"Tunables",E,"Tunable parameters for WebAssembly compilation.",N,N],[12,"static_memory_bound",E,"For static heaps, the size of the heap protected by bounds…",14,N],[12,"static_memory_offset_guard_size",E,"The size of the offset guard for static heaps.",14,N],[12,"dynamic_memory_offset_guard_size",E,"The size of the offset guard for dynamic heaps.",14,N],[3,R[177],E,"Target specific type for shared signature index.",N,N],[3,R[169],E,"This class computes offsets to fields within `VMContext`…",N,N],[12,"pointer_size",E,"The size in bytes of a pointer on the target.",15,N],[12,"num_signature_ids",E,"The number of signature declarations in the module.",15,N],[12,"num_imported_functions",E,"The number of imported functions in the module.",15,N],[12,"num_imported_tables",E,"The number of imported tables in the module.",15,N],[12,"num_imported_memories",E,"The number of imported memories in the module.",15,N],[12,"num_imported_globals",E,"The number of imported globals in the module.",15,N],[12,"num_defined_tables",E,"The number of defined tables in the module.",15,N],[12,"num_defined_memories",E,"The number of defined memories in the module.",15,N],[12,"num_defined_globals",E,"The number of defined globals in the module.",15,N],[4,R[170],E,"An error while compiling WebAssembly to machine code.",N,N],[13,"Wasm",E,R[187],16,N],[13,"Codegen",E,R[108],16,N],[13,"DebugInfoNotSupported",E,R[108],16,N],[4,R[171],E,"Destination function. Can be either user function or some…",N,N],[13,"UserFunc",E,"The user function index.",17,N],[13,"LibCall",E,"A compiler-generated libcall.",17,N],[13,"Memory32Grow",E,"Function for growing a locally-defined 32-bit memory by…",17,N],[13,"ImportedMemory32Grow",E,"Function for growing an imported 32-bit memory by the…",17,N],[13,"Memory32Size",E,"Function for query current size of a locally-defined…",17,N],[13,"ImportedMemory32Size",E,"Function for query current size of an imported 32-bit…",17,N],[13,"JumpTable",E,"Jump table index.",17,N],[4,"Export",E,"An entity to export.",N,N],[13,"Function",E,"Function export.",18,N],[13,"Table",E,"Table export.",18,N],[13,R[1],E,"Memory export.",18,N],[13,R[0],E,"Global export.",18,N],[4,R[172],E,"Implemenation styles for WebAssembly linear memory.",N,N],[13,"Dynamic",E,"The actual memory can be resized and moved.",19,N],[13,"Static",E,"Addresss space is allocated up front.",19,N],[12,"bound","wasmtime_environ::MemoryStyle","The number of mapped and unmapped pages.",19,N],[4,R[173],R[109],"Implemenation styles for WebAssembly tables.",N,N],[13,"CallerChecksSignature",E,"Signatures are stored in the table and checked in the…",20,N],[5,"cache_create_new_config",E,"Creates a new configuration file at specified path, or…",N,[[["asref",["path"]],[R[5]],["path"],["debug"]],[["pathbuf"],[R[82]],[R[28],["pathbuf",R[82]]]]]],[5,"cache_init",E,"Initializes the cache system. Should be called exactly…",N,[[["debug"],[R[5],["str"]],["str"],["asref",["path"]],[R[5]],["path"],["bool"]],["vec"]]],[5,"translate_signature",E,"Add environment-specific function parameters.",N,[[[R[110]],["type"]],[R[110]]]],[11,"new",E,"Creates a compilation artifact from a contiguous function…",21,[[[R[113],[R[112],R[111]]],[R[111]],[R[112]]],["self"]]],[11,"from_buffer",E,"Allocates the compilation result with the given function…",21,[[["vec",["u8"]],["u8"]],["self"]]],[11,"get",E,"Gets the bytes of a single function",21,[[["self"],[R[112]]],[R[111]]]],[11,"len",E,"Gets the number of functions defined.",21,[[["self"]],["usize"]]],[11,"get_jt_offsets",E,"Gets functions jump table offsets.",21,[[["self"]],[[R[113],[R[112],R[114]]],[R[114]],[R[112]]]]],[11,"get_memory32_grow_index",E,"Returns an index for wasm's `memory.grow` builtin function.",22,[[],["self"]]],[11,"get_imported_memory32_grow_index",E,"Returns an index for wasm's imported `memory.grow` builtin…",22,[[],["self"]]],[11,"get_memory32_size_index",E,"Returns an index for wasm's `memory.size` builtin function.",22,[[],["self"]]],[11,"get_imported_memory32_size_index",E,"Returns an index for wasm's imported `memory.size` builtin…",22,[[],["self"]]],[11,"builtin_functions_total_number",E,"Returns the total number of builtin functions.",22,[[],["u32"]]],[11,"index",E,"Return the index as an u32 number.",22,[[["self"]],["u32"]]],[11,R[115],E,"Decide on an implementation style for the given `Memory`.",19,[[[R[80]],[R[116]]]]],[11,R[115],E,"Draw up a plan for implementing a `Memory`.",6,[[[R[80]],[R[116]]],["self"]]],[11,R[117],E,"Decide on an implementation style for the given `Table`.",20,[[["table"],[R[116]]],["self"]]],[11,R[117],E,"Draw up a plan for implementing a `Table`.",9,[[["table"],[R[116]]],["self"]]],[11,"new",E,"Allocates the module data structures.",7,[[],["self"]]],[11,"func_index",E,"Convert a `DefinedFuncIndex` into a `FuncIndex`.",7,[[["self"],[R[112]]],[R[118]]]],[11,"defined_func_index",E,"Convert a `FuncIndex` into a `DefinedFuncIndex`. Returns…",7,[[["self"],[R[118]]],[[R[5],[R[112]]],[R[112]]]]],[11,"is_imported_function",E,"Test whether the given function index is for an imported…",7,[[["self"],[R[118]]],["bool"]]],[11,R[119],E,"Convert a `DefinedTableIndex` into a `TableIndex`.",7,[[["self"],[R[121]]],[R[120]]]],[11,"defined_table_index",E,"Convert a `TableIndex` into a `DefinedTableIndex`. Returns…",7,[[["self"],[R[120]]],[[R[5],[R[121]]],[R[121]]]]],[11,"is_imported_table",E,"Test whether the given table index is for an imported table.",7,[[["self"],[R[120]]],["bool"]]],[11,R[122],E,"Convert a `DefinedMemoryIndex` into a `MemoryIndex`.",7,[[["self"],[R[124]]],[R[123]]]],[11,"defined_memory_index",E,"Convert a `MemoryIndex` into a `DefinedMemoryIndex`.…",7,[[["self"],[R[123]]],[[R[124]],[R[5],[R[124]]]]]],[11,"is_imported_memory",E,"Test whether the given memory index is for an imported…",7,[[["self"],[R[123]]],["bool"]]],[11,"global_index",E,"Convert a `DefinedGlobalIndex` into a `GlobalIndex`.",7,[[["self"],[R[126]]],[R[125]]]],[11,"defined_global_index",E,"Convert a `GlobalIndex` into a `DefinedGlobalIndex`.…",7,[[["self"],[R[125]]],[[R[126]],[R[5],[R[126]]]]]],[11,"is_imported_global",E,"Test whether the given global index is for an imported…",7,[[["self"],[R[125]]],["bool"]]],[11,"hash_for_cache",E,"Computes hash of the module for the purpose of caching.",7,[[["self"],["h"],[R[113]]]]],[11,"func_env",E,"Return a new `FuncEnvironment` for translating a function.",13,[[["self"]],["funcenvironment"]]],[11,"new",E,"Allocates the enironment data structures.",23,[[[R[99]],[R[116]]],["self"]]],[11,"translate",E,"Translate a wasm module using this environment. This…",23,[[],[[R[154],[R[127]]],[R[127]]]]],[11,"new",E,"Return a new `VMOffsets` instance, for a given pointer size.",15,[[["module"],["u8"]],["self"]]],[11,"vmfunction_import_body",E,"The offset of the `body` field.",15,[[["self"]],["u8"]]],[11,"vmfunction_import_vmctx",E,R[128],15,[[["self"]],["u8"]]],[11,"size_of_vmfunction_import",E,"Return the size of `VMFunctionImport`.",15,[[["self"]],["u8"]]],[11,"size_of_vmfunction_body_ptr",E,R[129],15,[[["self"]],["u8"]]],[11,"vmtable_import_from",E,R[130],15,[[["self"]],["u8"]]],[11,"vmtable_import_vmctx",E,R[128],15,[[["self"]],["u8"]]],[11,"size_of_vmtable_import",E,"Return the size of `VMTableImport`.",15,[[["self"]],["u8"]]],[11,"vmtable_definition_base",E,R[131],15,[[["self"]],["u8"]]],[11,"vmtable_definition_current_elements",E,"The offset of the `current_elements` field.",15,[[["self"]],["u8"]]],[11,"size_of_vmtable_definition_current_elements",E,R[129],15,[[["self"]],["u8"]]],[11,"size_of_vmtable_definition",E,"Return the size of `VMTableDefinition`.",15,[[["self"]],["u8"]]],[11,"type_of_vmtable_definition_current_elements",E,"The type of the `current_elements` field.",15,[[["self"]],["type"]]],[11,"vmmemory_import_from",E,R[130],15,[[["self"]],["u8"]]],[11,"vmmemory_import_vmctx",E,R[128],15,[[["self"]],["u8"]]],[11,"size_of_vmmemory_import",E,"Return the size of `VMMemoryImport`.",15,[[["self"]],["u8"]]],[11,"vmmemory_definition_base",E,R[131],15,[[["self"]],["u8"]]],[11,"vmmemory_definition_current_length",E,"The offset of the `current_length` field.",15,[[["self"]],["u8"]]],[11,"size_of_vmmemory_definition_current_length",E,"The size of the `current_length` field.",15,[[["self"]],["u8"]]],[11,"size_of_vmmemory_definition",E,"Return the size of `VMMemoryDefinition`.",15,[[["self"]],["u8"]]],[11,"type_of_vmmemory_definition_current_length",E,"The type of the `current_length` field.",15,[[["self"]],["type"]]],[11,"vmglobal_import_from",E,R[130],15,[[["self"]],["u8"]]],[11,"size_of_vmglobal_import",E,"Return the size of `VMGlobalImport`.",15,[[["self"]],["u8"]]],[11,"size_of_vmglobal_definition",E,"Return the size of `VMGlobalDefinition`; this is the size…",15,[[["self"]],["u8"]]],[11,"size_of_vmshared_signature_index",E,"Return the size of `VMSharedSignatureIndex`.",15,[[["self"]],["u8"]]],[11,"vmcaller_checked_anyfunc_func_ptr",E,"The offset of the `func_ptr` field.",15,[[["self"]],["u8"]]],[11,"vmcaller_checked_anyfunc_type_index",E,"The offset of the `type_index` field.",15,[[["self"]],["u8"]]],[11,"vmcaller_checked_anyfunc_vmctx",E,R[128],15,[[["self"]],["u8"]]],[11,"size_of_vmcaller_checked_anyfunc",E,"Return the size of `VMCallerCheckedAnyfunc`.",15,[[["self"]],["u8"]]],[11,"vmctx_signature_ids_begin",E,"The offset of the `signature_ids` array.",15,[[["self"]],["u32"]]],[11,"vmctx_imported_functions_begin",E,R[132],15,[[["self"]],["u32"]]],[11,"vmctx_imported_tables_begin",E,R[132],15,[[["self"]],["u32"]]],[11,"vmctx_imported_memories_begin",E,R[133],15,[[["self"]],["u32"]]],[11,"vmctx_imported_globals_begin",E,R[134],15,[[["self"]],["u32"]]],[11,"vmctx_tables_begin",E,R[132],15,[[["self"]],["u32"]]],[11,"vmctx_memories_begin",E,R[133],15,[[["self"]],["u32"]]],[11,"vmctx_globals_begin",E,R[134],15,[[["self"]],["u32"]]],[11,"vmctx_builtin_functions_begin",E,"The offset of the builtin functions array.",15,[[["self"]],["u32"]]],[11,"size_of_vmctx",E,"Return the size of the `VMContext` allocation.",15,[[["self"]],["u32"]]],[11,"vmctx_vmshared_signature_id",E,"Return the offset to `VMSharedSignatureId` index `index`.",15,[[["self"],[R[155]]],["u32"]]],[11,"vmctx_vmfunction_import",E,"Return the offset to `VMFunctionImport` index `index`.",15,[[["self"],[R[118]]],["u32"]]],[11,"vmctx_vmtable_import",E,"Return the offset to `VMTableImport` index `index`.",15,[[["self"],[R[120]]],["u32"]]],[11,"vmctx_vmmemory_import",E,"Return the offset to `VMMemoryImport` index `index`.",15,[[["self"],[R[123]]],["u32"]]],[11,"vmctx_vmglobal_import",E,"Return the offset to `VMGlobalImport` index `index`.",15,[[["self"],[R[125]]],["u32"]]],[11,"vmctx_vmtable_definition",E,"Return the offset to `VMTableDefinition` index `index`.",15,[[["self"],[R[121]]],["u32"]]],[11,"vmctx_vmmemory_definition",E,"Return the offset to `VMMemoryDefinition` index `index`.",15,[[["self"],[R[124]]],["u32"]]],[11,"vmctx_vmglobal_definition",E,"Return the offset to the `VMGlobalDefinition` index `index`.",15,[[["self"],[R[126]]],["u32"]]],[11,"vmctx_vmfunction_import_body",E,"Return the offset to the `body` field in `*const…",15,[[["self"],[R[118]]],["u32"]]],[11,"vmctx_vmfunction_import_vmctx",E,"Return the offset to the `vmctx` field in `*const…",15,[[["self"],[R[118]]],["u32"]]],[11,"vmctx_vmtable_import_from",E,"Return the offset to the `from` field in `VMTableImport`…",15,[[["self"],[R[120]]],["u32"]]],[11,"vmctx_vmtable_definition_base",E,R[135],15,[[["self"],[R[121]]],["u32"]]],[11,"vmctx_vmtable_definition_current_elements",E,"Return the offset to the `current_elements` field in…",15,[[["self"],[R[121]]],["u32"]]],[11,"vmctx_vmmemory_import_from",E,"Return the offset to the `from` field in `VMMemoryImport`…",15,[[["self"],[R[123]]],["u32"]]],[11,"vmctx_vmmemory_import_vmctx",E,"Return the offset to the `vmctx` field in `VMMemoryImport`…",15,[[["self"],[R[123]]],["u32"]]],[11,"vmctx_vmmemory_definition_base",E,R[135],15,[[["self"],[R[124]]],["u32"]]],[11,"vmctx_vmmemory_definition_current_length",E,"Return the offset to the `current_length` field in…",15,[[["self"],[R[124]]],["u32"]]],[11,"vmctx_vmglobal_import_from",E,"Return the offset to the `from` field in `VMGlobalImport`…",15,[[["self"],[R[125]]],["u32"]]],[11,"vmctx_builtin_function",E,"Return the offset to builtin function in…",15,[[["self"],["builtinfunctionindex"]],["u32"]]],[11,"new",E,"Constructs `TargetSharedSignatureIndex`.",24,[[["u32"]],["self"]]],[11,"index",E,"Returns index value.",24,[[],["u32"]]],[0,"cranelift",E,"Support for compiling with Cranelift.",N,N],[3,R[178],R[139],"Implementation of a relocation sink that just saves all…",N,N],[12,"func_relocs",E,"Relocations recorded for the function.",25,N],[3,R[179],E,"A compiler that compiles a WebAssembly module with…",N,N],[11,"new",E,"Return a new `RelocSink` instance.",25,[[[R[118]]],["self"]]],[6,"ModuleAddressMap",R[109],"Module functions addresses mappings.",N,N],[6,"ValueLabelsRanges",E,"Value ranges for functions.",N,N],[6,"Relocations",E,"Relocations to apply to function bodies.",N,N],[6,"Traps",E,"Information about traps associated with the functions…",N,N],[17,"WASM_PAGE_SIZE",E,"WebAssembly page sizes are defined to be 64KiB.",N,N],[17,"WASM_MAX_PAGES",E,"The number of pages we can have before we run out of byte…",N,N],[17,"VERSION",E,R[208],N,N],[8,R[184],E,"An implementation of a compiler from parsed WebAssembly…",N,N],[10,R[140],E,"Compile a parsed module with the given `TargetIsa`.",26,[[[R[113],[R[112],R[136]]],["bool"],["module"],[R[112]],[R[142]],[R[136]],[R[141]]],[[R[137]],[R[28],[R[137]]]]]],[11,R[35],E,E,0,[[["self"]],[T]]],[11,R[36],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[30],E,E,0,[[[U]],[R[28]]]],[11,R[31],E,E,0,[[],[R[28]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[33],E,E,0,[[["self"]],[T]]],[11,R[32],E,E,0,[[["self"]],[R[34]]]],[11,R[138],E,E,0,[[["self"],["k"]],["bool"]]],[11,R[35],E,E,1,[[["self"]],[T]]],[11,R[36],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[30],E,E,1,[[[U]],[R[28]]]],[11,R[31],E,E,1,[[],[R[28]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[33],E,E,1,[[["self"]],[T]]],[11,R[32],E,E,1,[[["self"]],[R[34]]]],[11,R[138],E,E,1,[[["self"],["k"]],["bool"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[30],E,E,2,[[[U]],[R[28]]]],[11,R[31],E,E,2,[[],[R[28]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[33],E,E,2,[[["self"]],[T]]],[11,R[32],E,E,2,[[["self"]],[R[34]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[30],E,E,21,[[[U]],[R[28]]]],[11,R[31],E,E,21,[[],[R[28]]]],[11,R[29],E,E,21,[[["self"]],[T]]],[11,R[33],E,E,21,[[["self"]],[T]]],[11,R[32],E,E,21,[[["self"]],[R[34]]]],[11,R[138],E,E,21,[[["self"],["k"]],["bool"]]],[11,R[35],E,E,3,[[["self"]],[T]]],[11,R[36],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[30],E,E,3,[[[U]],[R[28]]]],[11,R[31],E,E,3,[[],[R[28]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[33],E,E,3,[[["self"]],[T]]],[11,R[32],E,E,3,[[["self"]],[R[34]]]],[11,R[138],E,E,3,[[["self"],["k"]],["bool"]]],[11,R[35],E,E,4,[[["self"]],[T]]],[11,R[36],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[30],E,E,4,[[[U]],[R[28]]]],[11,R[31],E,E,4,[[],[R[28]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[33],E,E,4,[[["self"]],[T]]],[11,R[32],E,E,4,[[["self"]],[R[34]]]],[11,R[138],E,E,4,[[["self"],["k"]],["bool"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[30],E,E,5,[[[U]],[R[28]]]],[11,R[31],E,E,5,[[],[R[28]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[33],E,E,5,[[["self"]],[T]]],[11,R[32],E,E,5,[[["self"]],[R[34]]]],[11,R[138],E,E,5,[[["self"],["k"]],["bool"]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[30],E,E,22,[[[U]],[R[28]]]],[11,R[31],E,E,22,[[],[R[28]]]],[11,R[29],E,E,22,[[["self"]],[T]]],[11,R[33],E,E,22,[[["self"]],[T]]],[11,R[32],E,E,22,[[["self"]],[R[34]]]],[11,R[35],E,E,6,[[["self"]],[T]]],[11,R[36],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[30],E,E,6,[[[U]],[R[28]]]],[11,R[31],E,E,6,[[],[R[28]]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[33],E,E,6,[[["self"]],[T]]],[11,R[32],E,E,6,[[["self"]],[R[34]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[30],E,E,7,[[[U]],[R[28]]]],[11,R[31],E,E,7,[[],[R[28]]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[33],E,E,7,[[["self"]],[T]]],[11,R[32],E,E,7,[[["self"]],[R[34]]]],[11,R[35],E,E,8,[[["self"]],[T]]],[11,R[36],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[30],E,E,8,[[[U]],[R[28]]]],[11,R[31],E,E,8,[[],[R[28]]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[33],E,E,8,[[["self"]],[T]]],[11,R[32],E,E,8,[[["self"]],[R[34]]]],[11,R[35],E,E,9,[[["self"]],[T]]],[11,R[36],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[30],E,E,9,[[[U]],[R[28]]]],[11,R[31],E,E,9,[[],[R[28]]]],[11,R[29],E,E,9,[[["self"]],[T]]],[11,R[33],E,E,9,[[["self"]],[T]]],[11,R[32],E,E,9,[[["self"]],[R[34]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[30],E,E,10,[[[U]],[R[28]]]],[11,R[31],E,E,10,[[],[R[28]]]],[11,R[29],E,E,10,[[["self"]],[T]]],[11,R[33],E,E,10,[[["self"]],[T]]],[11,R[32],E,E,10,[[["self"]],[R[34]]]],[11,R[35],E,E,11,[[["self"]],[T]]],[11,R[36],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[30],E,E,11,[[[U]],[R[28]]]],[11,R[31],E,E,11,[[],[R[28]]]],[11,R[29],E,E,11,[[["self"]],[T]]],[11,R[33],E,E,11,[[["self"]],[T]]],[11,R[32],E,E,11,[[["self"]],[R[34]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[30],E,E,12,[[[U]],[R[28]]]],[11,R[31],E,E,12,[[],[R[28]]]],[11,R[29],E,E,12,[[["self"]],[T]]],[11,R[33],E,E,12,[[["self"]],[T]]],[11,R[32],E,E,12,[[["self"]],[R[34]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[30],E,E,23,[[[U]],[R[28]]]],[11,R[31],E,E,23,[[],[R[28]]]],[11,R[29],E,E,23,[[["self"]],[T]]],[11,R[33],E,E,23,[[["self"]],[T]]],[11,R[32],E,E,23,[[["self"]],[R[34]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[30],E,E,13,[[[U]],[R[28]]]],[11,R[31],E,E,13,[[],[R[28]]]],[11,R[29],E,E,13,[[["self"]],[T]]],[11,R[33],E,E,13,[[["self"]],[T]]],[11,R[32],E,E,13,[[["self"]],[R[34]]]],[11,R[35],E,E,14,[[["self"]],[T]]],[11,R[36],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[30],E,E,14,[[[U]],[R[28]]]],[11,R[31],E,E,14,[[],[R[28]]]],[11,R[29],E,E,14,[[["self"]],[T]]],[11,R[33],E,E,14,[[["self"]],[T]]],[11,R[32],E,E,14,[[["self"]],[R[34]]]],[11,R[35],E,E,24,[[["self"]],[T]]],[11,R[36],E,E,24,[[["self"],[T]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[30],E,E,24,[[[U]],[R[28]]]],[11,R[31],E,E,24,[[],[R[28]]]],[11,R[29],E,E,24,[[["self"]],[T]]],[11,R[33],E,E,24,[[["self"]],[T]]],[11,R[32],E,E,24,[[["self"]],[R[34]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[30],E,E,15,[[[U]],[R[28]]]],[11,R[31],E,E,15,[[],[R[28]]]],[11,R[29],E,E,15,[[["self"]],[T]]],[11,R[33],E,E,15,[[["self"]],[T]]],[11,R[32],E,E,15,[[["self"]],[R[34]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[37],E,E,16,[[["self"]],[R[82]]]],[11,R[30],E,E,16,[[[U]],[R[28]]]],[11,R[31],E,E,16,[[],[R[28]]]],[11,R[29],E,E,16,[[["self"]],[T]]],[11,R[33],E,E,16,[[["self"]],[T]]],[11,R[32],E,E,16,[[["self"]],[R[34]]]],[11,R[35],E,E,17,[[["self"]],[T]]],[11,R[36],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[30],E,E,17,[[[U]],[R[28]]]],[11,R[31],E,E,17,[[],[R[28]]]],[11,R[29],E,E,17,[[["self"]],[T]]],[11,R[33],E,E,17,[[["self"]],[T]]],[11,R[32],E,E,17,[[["self"]],[R[34]]]],[11,R[138],E,E,17,[[["self"],["k"]],["bool"]]],[11,R[35],E,E,18,[[["self"]],[T]]],[11,R[36],E,E,18,[[["self"],[T]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[30],E,E,18,[[[U]],[R[28]]]],[11,R[31],E,E,18,[[],[R[28]]]],[11,R[29],E,E,18,[[["self"]],[T]]],[11,R[33],E,E,18,[[["self"]],[T]]],[11,R[32],E,E,18,[[["self"]],[R[34]]]],[11,R[138],E,E,18,[[["self"],["k"]],["bool"]]],[11,R[35],E,E,19,[[["self"]],[T]]],[11,R[36],E,E,19,[[["self"],[T]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[30],E,E,19,[[[U]],[R[28]]]],[11,R[31],E,E,19,[[],[R[28]]]],[11,R[29],E,E,19,[[["self"]],[T]]],[11,R[33],E,E,19,[[["self"]],[T]]],[11,R[32],E,E,19,[[["self"]],[R[34]]]],[11,R[35],E,E,20,[[["self"]],[T]]],[11,R[36],E,E,20,[[["self"],[T]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[30],E,E,20,[[[U]],[R[28]]]],[11,R[31],E,E,20,[[],[R[28]]]],[11,R[29],E,E,20,[[["self"]],[T]]],[11,R[33],E,E,20,[[["self"]],[T]]],[11,R[32],E,E,20,[[["self"]],[R[34]]]],[11,"into",R[139],E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[30],E,E,25,[[[U]],[R[28]]]],[11,R[31],E,E,25,[[],[R[28]]]],[11,R[29],E,E,25,[[["self"]],[T]]],[11,R[33],E,E,25,[[["self"]],[T]]],[11,R[32],E,E,25,[[["self"]],[R[34]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[30],E,E,27,[[[U]],[R[28]]]],[11,R[31],E,E,27,[[],[R[28]]]],[11,R[29],E,E,27,[[["self"]],[T]]],[11,R[33],E,E,27,[[["self"]],[T]]],[11,R[32],E,E,27,[[["self"]],[R[34]]]],[11,R[140],E,"Compile the module using Cranelift, producing a…",27,[[[R[113],[R[112],R[136]]],[R[141]],["bool"],[R[112]],[R[142]],[R[136]],["module"]],[[R[137]],[R[28],[R[137]]]]]],[11,R[19],R[109],E,14,[[],["self"]]],[11,"clone",E,E,1,[[["self"]],[R[143]]]],[11,"clone",E,E,0,[[["self"]],[R[144]]]],[11,"clone",E,E,3,[[["self"]],[R[111]]]],[11,"clone",E,E,4,[[["self"]],[R[146]]]],[11,"clone",E,E,17,[[["self"]],[R[147]]]],[11,"clone",E,E,8,[[["self"]],["tableelements"]]],[11,"clone",E,E,18,[[["self"]],["export"]]],[11,"clone",E,E,19,[[["self"]],["memorystyle"]]],[11,"clone",E,E,6,[[["self"]],[R[244]]]],[11,"clone",E,E,20,[[["self"]],["tablestyle"]]],[11,"clone",E,E,9,[[["self"]],[R[243]]]],[11,"clone",E,E,11,[[["self"]],["datainitializerlocation"]]],[11,"clone",E,E,14,[[["self"]],[R[116]]]],[11,"clone",E,E,24,[[["self"]],["targetsharedsignatureindex"]]],[11,"partial_cmp",E,E,18,[[["self"],["export"]],[[R[5],[R[149]]],[R[149]]]]],[11,"lt",E,E,18,[[["self"],["export"]],["bool"]]],[11,"le",E,E,18,[[["self"],["export"]],["bool"]]],[11,"gt",E,E,18,[[["self"],["export"]],["bool"]]],[11,"ge",E,E,18,[[["self"],["export"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[143]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[143]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[144]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[144]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[111]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[111]]],["bool"]]],[11,"eq",E,E,21,[[["self"],[R[145]]],["bool"]]],[11,"ne",E,E,21,[[["self"],[R[145]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[146]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[146]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[147]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[147]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[148]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[148]]],["bool"]]],[11,"eq",E,E,18,[[["self"],["export"]],["bool"]]],[11,"ne",E,E,18,[[["self"],["export"]],["bool"]]],[11,"cmp",E,E,18,[[["self"],["export"]],[R[149]]]],[11,"from",E,E,16,[[["wasmerror"]],["self"]]],[11,"from",E,E,16,[[["codegenerror"]],["self"]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"hash",E,E,18,[[["self"],["__h"]]]],[11,"hash",E,E,19,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"hash",E,E,20,[[["self"],["__h"]]]],[11,"hash",E,E,9,[[["self"],["__h"]]]],[11,"hash",E,E,12,[[["self"],["__h"]]]],[11,"fmt",E,E,1,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,0,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,3,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,21,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,4,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,17,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,5,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,16,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,8,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,18,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,19,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,6,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,20,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,9,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,7,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,24,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,16,[[["self"],[R[83]]],[R[28]]]],[11,"source",E,E,16,[[["self"]],[[R[5],["error"]],["error"]]]],[11,"reloc_ebb",R[139],E,25,[[["self"],[R[150]],["reloc"]]]],[11,"reloc_external",E,E,25,[[["self"],[R[150]],["reloc"],["externalname"],["addend"]]]],[11,"reloc_constant",E,E,25,[[["self"],["constantoffset"],[R[150]],["reloc"]]]],[11,"reloc_jt",E,E,25,[[["self"],[R[150]],["reloc"],["jumptable"]]]],[11,R[151],R[109],E,1,[[["self"],["__s"]],[R[28]]]],[11,R[151],E,E,0,[[["self"],["__s"]],[R[28]]]],[11,R[151],E,E,3,[[["self"],["__s"]],[R[28]]]],[11,R[151],E,E,21,[[["self"],["__s"]],[R[28]]]],[11,R[151],E,E,4,[[["self"],["__s"]],[R[28]]]],[11,R[151],E,E,17,[[["self"],["__s"]],[R[28]]]],[11,R[151],E,E,5,[[["self"],["__s"]],[R[28]]]],[11,R[152],E,E,1,[[["__d"]],[R[28]]]],[11,R[152],E,E,0,[[["__d"]],[R[28]]]],[11,R[152],E,E,3,[[["__d"]],[R[28]]]],[11,R[152],E,E,21,[[["__d"]],[R[28]]]],[11,R[152],E,E,4,[[["__d"]],[R[28]]]],[11,R[152],E,E,17,[[["__d"]],[R[28]]]],[11,R[152],E,E,5,[[["__d"]],[R[28]]]],[11,R[153],E,E,23,[[["self"]],[R[99]]]],[11,"reserve_signatures",E,E,23,[[["self"],["u32"]],[R[154]]]],[11,"declare_signature",E,E,23,[[["self"],[R[110]]],[R[154]]]],[11,"declare_func_import",E,E,23,[[["self"],[R[155]],["str"]],[R[154]]]],[11,"declare_table_import",E,E,23,[[["self"],["table"],["str"]],[R[154]]]],[11,"declare_memory_import",E,E,23,[[["self"],[R[80]],["str"]],[R[154]]]],[11,"declare_global_import",E,E,23,[[["self"],["str"],[R[8]]],[R[154]]]],[11,"finish_imports",E,E,23,[[["self"]],[R[154]]]],[11,"reserve_func_types",E,E,23,[[["self"],["u32"]],[R[154]]]],[11,"declare_func_type",E,E,23,[[["self"],[R[155]]],[R[154]]]],[11,"reserve_tables",E,E,23,[[["self"],["u32"]],[R[154]]]],[11,"declare_table",E,E,23,[[["self"],["table"]],[R[154]]]],[11,"reserve_memories",E,E,23,[[["self"],["u32"]],[R[154]]]],[11,"declare_memory",E,E,23,[[["self"],[R[80]]],[R[154]]]],[11,"reserve_globals",E,E,23,[[["self"],["u32"]],[R[154]]]],[11,"declare_global",E,E,23,[[["self"],[R[8]]],[R[154]]]],[11,"reserve_exports",E,E,23,[[["self"],["u32"]],[R[154]]]],[11,"declare_func_export",E,E,23,[[["self"],[R[118]],["str"]],[R[154]]]],[11,"declare_table_export",E,E,23,[[["self"],[R[120]],["str"]],[R[154]]]],[11,"declare_memory_export",E,E,23,[[["self"],["str"],[R[123]]],[R[154]]]],[11,"declare_global_export",E,E,23,[[["self"],[R[125]],["str"]],[R[154]]]],[11,"declare_start_func",E,E,23,[[["self"],[R[118]]],[R[154]]]],[11,"reserve_table_elements",E,E,23,[[["self"],["u32"]],[R[154]]]],[11,"declare_table_elements",E,E,23,[[["self"],["box"],["usize"],[R[5],[R[125]]],[R[120]],[R[125]]],[R[154]]]],[11,"define_function_body",E,E,23,[[["self"],["usize"],[R[142]]],[R[154]]]],[11,"reserve_data_initializers",E,E,23,[[["self"],["u32"]],[R[154]]]],[11,"declare_data_initialization",E,E,23,[[["self"],["usize"],[R[5],[R[125]]],[R[125]],[R[123]]],[R[154]]]]],"p":[[3,R[156]],[3,R[157]],[3,R[158]],[3,R[159]],[3,R[160]],[3,R[161]],[3,R[162]],[3,"Module"],[3,R[163]],[3,R[164]],[3,R[165]],[3,R[166]],[3,R[167]],[3,R[168]],[3,"Tunables"],[3,R[169]],[4,R[170]],[4,R[171]],[4,"Export"],[4,R[172]],[4,R[173]],[3,R[174]],[3,R[175]],[3,R[176]],[3,R[177]],[3,R[178]],[8,R[184]],[3,R[179]]]};
searchIndex["wasmtime_interface_types"]={"doc":"A small crate to handle WebAssembly interface types in…","i":[[3,R[182],"wasmtime_interface_types","A data structure intended to hold a parsed representation…",N,N],[3,R[183],E,"Representation of a binding of an exported function.",N,N],[4,"Value",E,"The set of all possible WebAssembly Interface Types",N,N],[13,"String",E,E,0,N],[13,"I32",E,E,0,N],[13,"U32",E,E,0,N],[13,"I64",E,E,0,N],[13,"U64",E,E,0,N],[13,"F32",E,E,0,N],[13,"F64",E,E,0,N],[11,"new",E,"Parses a raw binary wasm file, extracting information…",1,[[],[[R[180]],[R[28],[R[180]]]]]],[11,"invoke",E,"Same as `Context::invoke` except that this works with a…",1,[[["self"],["context"],[R[13]],["str"]],[[R[28],["vec"]],["vec",["value"]]]]],[11,"binding_for_export",E,"Returns an appropriate binding for the `name` export in…",1,[[["self"],[R[13]],["str"]],[[R[28],[R[181]]],[R[181]]]]],[11,"param_bindings",E,"Returns the list of binding expressions used to create the…",2,[[["self"]],[["vec",["incomingbindingexpression"]],[R[28],["vec"]]]]],[11,"param_types",E,"Returns the list of scalar types used for this binding",2,[[["self"]],[["vec",["webidlscalartype"]],[R[28],["vec"]]]]],[11,"result_bindings",E,"Returns the list of binding expressions used to extract…",2,[[["self"]],[[R[28],["vec"]],["vec",["outgoingbindingexpression"]]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[30],E,E,1,[[[U]],[R[28]]]],[11,R[31],E,E,1,[[],[R[28]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[33],E,E,1,[[["self"]],[T]]],[11,R[32],E,E,1,[[["self"]],[R[34]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[30],E,E,2,[[[U]],[R[28]]]],[11,R[31],E,E,2,[[],[R[28]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[33],E,E,2,[[["self"]],[T]]],[11,R[32],E,E,2,[[["self"]],[R[34]]]],[11,R[35],E,E,0,[[["self"]],[T]]],[11,R[36],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[37],E,E,0,[[["self"]],[R[82]]]],[11,R[30],E,E,0,[[[U]],[R[28]]]],[11,R[31],E,E,0,[[],[R[28]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[33],E,E,0,[[["self"]],[T]]],[11,R[32],E,E,0,[[["self"]],[R[34]]]],[11,"clone",E,E,0,[[["self"]],["value"]]],[11,"from",E,E,0,[[[R[82]]],["value"]]],[11,"from",E,E,0,[[["i32"]],["value"]]],[11,"from",E,E,0,[[["u32"]],["value"]]],[11,"from",E,E,0,[[["i64"]],["value"]]],[11,"from",E,E,0,[[["u64"]],["value"]]],[11,"from",E,E,0,[[["f32"]],["value"]]],[11,"from",E,E,0,[[["f64"]],["value"]]],[11,"from",E,E,0,[[["str"]],["value"]]],[11,"fmt",E,E,0,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,0,[[["self"],[R[83]]],[R[28]]]]],"p":[[4,"Value"],[3,R[182]],[3,R[183]]]};
searchIndex["wasmtime_jit"]={"doc":"JIT-style runtime for WebAssembly using Cranelift.","i":[[3,R[226],R[185],R[232],N,N],[4,R[216],E,R[238],N,N],[13,"Resource",E,R[239],0,N],[13,"Link",E,R[240],0,N],[13,R[241],E,R[108],0,N],[3,R[223],E,"Memory manager for executable code.",N,N],[3,R[184],E,"A WebAssembly code JIT compiler.",N,N],[3,"Context",E,"A convenient context for compiling and executing…",N,N],[3,"Features",E,"The collection of features configurable during compilation",N,N],[12,"threads",E,"marks whether the proposed thread feature is enabled or…",1,N],[12,"reference_types",E,"marks whether the proposed reference type feature is…",1,N],[12,"simd",E,"marks whether the proposed SIMD feature is enabled or…",1,N],[12,"bulk_memory",E,"marks whether the proposed bulk memory feature is enabled…",1,N],[12,"multi_value",E,"marks whether the proposed multi-value feature is enabled…",1,N],[3,R[227],E,"Indicates an unknown instance was specified.",N,N],[3,R[224],E,"A compiled wasm module, ready to be instantiated.",N,N],[3,R[225],E,"A namespace containing instances keyed by name.",N,N],[3,R[228],E,"`Resolver` implementation that always resolves to `None`.",N,N],[4,R[217],E,"An error detected while invoking a wasm function or…",N,N],[13,"Setup",E,"An internal implementation error occurred.",2,N],[13,"Field",E,"No field with the specified name was present.",2,N],[13,"Kind",E,"The field was present but was the wrong kind (eg.…",2,N],[13,"Type",E,"The field was present but was the wrong type (eg. i32,…",2,N],[4,R[218],E,"The result of invoking a wasm function or reading a wasm…",N,N],[13,"Returned",E,"The action returned normally. Its return values are…",3,N],[12,"values",R[186],"The return values.",3,N],[13,"Trapped",R[185],"A trap occurred while the action was executing.",3,N],[12,"message",R[186],"The trap message.",3,N],[4,R[219],R[185],"A runtime value.",N,N],[13,"I32",E,"A runtime value with type i32.",4,N],[13,"I64",E,"A runtime value with type i64.",4,N],[13,"F32",E,"A runtime value with type f32.",4,N],[13,"F64",E,"A runtime value with type f64.",4,N],[13,"V128",E,"A runtime value with type v128",4,N],[4,R[220],E,"Select which kind of compilation to use.",N,N],[13,"Auto",E,"Let Wasmtime pick the strategy.",5,N],[13,R[179],E,"Compile all functions with Cranelift.",5,N],[4,R[221],E,"Error message used by `WastContext`.",N,N],[13,R[87],E,"An unknown instance name was used.",6,N],[13,"Action",E,"An error occured while performing an action.",6,N],[4,R[222],E,"An error condition while setting up a wasm instance, be it…",N,N],[13,"Validate",E,"The module did not pass validation.",7,N],[13,"Compile",E,R[187],7,N],[13,"Instantiate",E,"Some runtime resource was unavailable or insufficient, or…",7,N],[13,"DebugInfo",E,"Debug information generation error occured.",7,N],[5,R[204],E,"Create a new wasm instance by compiling the wasm module in…",N,[[[R[199],[R[250]]],["rc",[R[199]]],[R[191]],[R[200]],["bool"]],[[R[28],[R[13],R[188]]],[R[13]],[R[188]]]]],[5,"link_module",E,"Links a module that has been compiled with…",N,[[[R[113]],[R[229]],[R[200]],[R[113]],["module"]],[[R[189]],[R[251]],[R[28],[R[251],R[189]]]]]],[5,"target_tunables",E,"Return a `Tunables` instance tuned for the given target…",N,[[["triple"]],[R[116]]]],[11,"value_type",E,"Return the type of this `RuntimeValue`.",4,[[],["type"]]],[11,"unwrap_i32",E,"Assuming this `RuntimeValue` holds an `i32`, return that…",4,[[],["i32"]]],[11,"unwrap_i64",E,"Assuming this `RuntimeValue` holds an `i64`, return that…",4,[[],["i64"]]],[11,"unwrap_f32",E,"Assuming this `RuntimeValue` holds an `f32`, return that…",4,[[],["f32"]]],[11,"unwrap_f32_bits",E,"Assuming this `RuntimeValue` holds an `f32`, return the…",4,[[],["u32"]]],[11,"unwrap_f64",E,"Assuming this `RuntimeValue` holds an `f64`, return that…",4,[[],["f64"]]],[11,"unwrap_f64_bits",E,"Assuming this `RuntimeValue` holds an `f64`, return the…",4,[[],["u64"]]],[11,"new",E,"Create a new `CodeMemory` instance.",8,[[],["self"]]],[11,"allocate_for_function",E,"Allocate a continuous memory block for a single compiled…",8,[[["self"],[R[111]]],[[R[28],[R[82]]],[R[82]]]]],[11,"allocate_for_compilation",E,"Allocate a continuous memory block for a compilation.",8,[[["self"],[R[145]]],[[R[82]],["box"],[R[28],["box",R[82]]]]]],[11,"publish",E,"Make all allocated memory executable.",8,[[["self"]]]],[11,"new",E,"Construct a new `Compiler`.",9,[[[R[141]],["box",[R[141]]],[R[14]]],["self"]]],[11,"frontend_config",E,"Return the target's frontend configuration settings.",9,[[["self"]],[R[99]]]],[11,R[116],E,"Return the tunables in use by this engine.",9,[[["self"]],[R[116]]]],[11,"get_published_trampoline",E,"Create and publish a trampoline for invoking a function.",9,[[["self"],["usize"],[R[110]]],[[R[28],[R[188]]],[R[188]]]]],[11,R[190],E,"Shared signature registry.",9,[[["self"]],["signatureregistry"]]],[11,"new",E,"Construct a new instance of `Context`.",10,[[["box",[R[191]]],[R[191]]],["self"]]],[11,"debug_info",E,"Get debug_info settings.",10,[[["self"]],["bool"]]],[11,"set_debug_info",E,"Set debug_info settings.",10,[[["self"],["bool"]]]],[11,"with_isa",E,"Construct a new instance of `Context` with the given target.",10,[[[R[141]],["box",[R[141]]],[R[14]]],["self"]]],[11,R[192],E,"Retrieve the context features",10,[[["self"]],[R[192]]]],[11,R[299],E,"Construct a new instance with the given features from the…",10,[[[R[192]]],["self"]]],[11,R[207],E,"Return the instance associated with the given name.",10,[[["self"],["str"]],[[R[13]],[R[28],[R[13],R[193]]],[R[193]]]]],[11,"instantiate_module",E,"Instantiate a module instance and register the instance.",10,[[["self"],[R[82]],[R[5],[R[82]]]],[[R[194]],[R[13]],[R[28],[R[13],R[194]]]]]],[11,R[140],E,"Compile a module.",10,[[["self"]],[[R[28],[R[195],R[188]]],[R[195]],[R[188]]]]],[11,"optionally_name_instance",E,"If `name` isn't None, register it for the given instance.",10,[[["self"],[R[82]],[R[5],[R[82]]],[R[13]]]]],[11,R[206],E,"Register a name for the given instance.",10,[[["self"],[R[82]],[R[13]]]]],[11,"alias",E,"Register an additional name for an existing registered…",10,[[["self"],[R[82]],["str"]],[[R[28],[R[193]]],[R[193]]]]],[11,"invoke_named",E,"Invoke an exported function from a named instance.",10,[[["self"],["str"]],[[R[28],[R[197],R[196]]],[R[196]],[R[197]]]]],[11,"invoke",E,"Invoke an exported function from an instance.",10,[[["self"],[R[13]],["str"]],[[R[194]],[R[28],[R[197],R[194]]],[R[197]]]]],[11,"get_named",E,R[198],10,[[["self"],["str"]],[[R[28],[R[197],R[196]]],[R[196]],[R[197]]]]],[11,"get",E,R[198],10,[[["self"],[R[13]],["str"]],[[R[194]],[R[28],[R[197],R[194]]],[R[197]]]]],[11,"inspect_memory",E,"Get a slice of memory from an instance.",10,[[["self"],["usize"],[R[13]],["str"]],[[R[28],[R[194]]],[R[194]]]]],[11,"get_global_exports",E,"Return a handle to the global_exports mapping, needed by…",10,[[["self"]],[[R[199],[R[250]]],["rc",[R[199]]]]]],[11,"new",E,"Compile a data buffer into a `CompiledModule`, which may…",11,[[[R[199],[R[250]]],["rc",[R[199]]],[R[191]],[R[200]],["bool"]],[[R[188]],[R[28],[R[188]]]]]],[11,"from_parts",E,"Construct a `CompiledModule` from component parts.",11,[[[R[199],[R[250]]],["rc",[R[199]]],[R[251]],[R[201]],[R[112]],[R[155]],[R[5],[R[201]]],["module"],[R[202],[R[112]]],[R[203]],["box"],[R[202],[R[155],R[203]]]],["self"]]],[11,R[204],E,"Crate an `Instance` from this `CompiledModule`.",11,[[["self"]],[[R[13]],[R[205]],[R[28],[R[13],R[205]]]]]],[11,"module",E,R[211],11,[[["self"]],[["rc",["module"]],["module"]]]],[11,R[212],E,R[213],11,[[["self"]],["module"]]],[11,"new",E,"Construct a new `Namespace`.",12,[[],["self"]]],[11,R[206],E,"Install a new `InstanceHandle` in this `Namespace`,…",12,[[["self"],[R[82]],[R[13]]]]],[11,R[207],E,"Get the instance registered with the given `instance_name`.",12,[[["self"],["str"]],[[R[13]],[R[5],[R[13]]]]]],[17,"VERSION",E,R[208],N,N],[8,"Resolver",E,"Import resolver connects imports with available exported…",N,N],[10,"resolve",E,"Resolve the given module/field combo.",13,[[["self"],["str"]],[[R[5],["export"]],["export"]]]],[11,R[35],E,E,14,[[["self"]],[T]]],[11,R[36],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[30],E,E,14,[[[U]],[R[28]]]],[11,R[31],E,E,14,[[],[R[28]]]],[11,R[29],E,E,14,[[["self"]],[T]]],[11,R[33],E,E,14,[[["self"]],[T]]],[11,R[32],E,E,14,[[["self"]],[R[34]]]],[11,R[138],E,E,14,[[["self"],["k"]],["bool"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[37],E,E,0,[[["self"]],[R[82]]]],[11,R[30],E,E,0,[[[U]],[R[28]]]],[11,R[31],E,E,0,[[],[R[28]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[33],E,E,0,[[["self"]],[T]]],[11,R[32],E,E,0,[[["self"]],[R[34]]]],[11,R[209],E,E,0,[[["self"]],["fail"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[30],E,E,8,[[[U]],[R[28]]]],[11,R[31],E,E,8,[[],[R[28]]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[33],E,E,8,[[["self"]],[T]]],[11,R[32],E,E,8,[[["self"]],[R[34]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[30],E,E,9,[[[U]],[R[28]]]],[11,R[31],E,E,9,[[],[R[28]]]],[11,R[29],E,E,9,[[["self"]],[T]]],[11,R[33],E,E,9,[[["self"]],[T]]],[11,R[32],E,E,9,[[["self"]],[R[34]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[30],E,E,10,[[[U]],[R[28]]]],[11,R[31],E,E,10,[[],[R[28]]]],[11,R[29],E,E,10,[[["self"]],[T]]],[11,R[33],E,E,10,[[["self"]],[T]]],[11,R[32],E,E,10,[[["self"]],[R[34]]]],[11,R[35],E,E,1,[[["self"]],[T]]],[11,R[36],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[30],E,E,1,[[[U]],[R[28]]]],[11,R[31],E,E,1,[[],[R[28]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[33],E,E,1,[[["self"]],[T]]],[11,R[32],E,E,1,[[["self"]],[R[34]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[37],E,E,15,[[["self"]],[R[82]]]],[11,R[30],E,E,15,[[[U]],[R[28]]]],[11,R[31],E,E,15,[[],[R[28]]]],[11,R[29],E,E,15,[[["self"]],[T]]],[11,R[33],E,E,15,[[["self"]],[T]]],[11,R[32],E,E,15,[[["self"]],[R[34]]]],[11,R[209],E,E,15,[[["self"]],["fail"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[30],E,E,11,[[[U]],[R[28]]]],[11,R[31],E,E,11,[[],[R[28]]]],[11,R[29],E,E,11,[[["self"]],[T]]],[11,R[33],E,E,11,[[["self"]],[T]]],[11,R[32],E,E,11,[[["self"]],[R[34]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[30],E,E,12,[[[U]],[R[28]]]],[11,R[31],E,E,12,[[],[R[28]]]],[11,R[29],E,E,12,[[["self"]],[T]]],[11,R[33],E,E,12,[[["self"]],[T]]],[11,R[32],E,E,12,[[["self"]],[R[34]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[30],E,E,16,[[[U]],[R[28]]]],[11,R[31],E,E,16,[[],[R[28]]]],[11,R[29],E,E,16,[[["self"]],[T]]],[11,R[33],E,E,16,[[["self"]],[T]]],[11,R[32],E,E,16,[[["self"]],[R[34]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[37],E,E,2,[[["self"]],[R[82]]]],[11,R[30],E,E,2,[[[U]],[R[28]]]],[11,R[31],E,E,2,[[],[R[28]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[33],E,E,2,[[["self"]],[T]]],[11,R[32],E,E,2,[[["self"]],[R[34]]]],[11,R[209],E,E,2,[[["self"]],["fail"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[30],E,E,3,[[[U]],[R[28]]]],[11,R[31],E,E,3,[[],[R[28]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[33],E,E,3,[[["self"]],[T]]],[11,R[32],E,E,3,[[["self"]],[R[34]]]],[11,R[35],E,E,4,[[["self"]],[T]]],[11,R[36],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[37],E,E,4,[[["self"]],[R[82]]]],[11,R[30],E,E,4,[[[U]],[R[28]]]],[11,R[31],E,E,4,[[],[R[28]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[33],E,E,4,[[["self"]],[T]]],[11,R[32],E,E,4,[[["self"]],[R[34]]]],[11,R[138],E,E,4,[[["self"],["k"]],["bool"]]],[11,R[35],E,E,5,[[["self"]],[T]]],[11,R[36],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[30],E,E,5,[[[U]],[R[28]]]],[11,R[31],E,E,5,[[],[R[28]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[33],E,E,5,[[["self"]],[T]]],[11,R[32],E,E,5,[[["self"]],[R[34]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[37],E,E,6,[[["self"]],[R[82]]]],[11,R[30],E,E,6,[[[U]],[R[28]]]],[11,R[31],E,E,6,[[],[R[28]]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[33],E,E,6,[[["self"]],[T]]],[11,R[32],E,E,6,[[["self"]],[R[34]]]],[11,R[209],E,E,6,[[["self"]],["fail"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[37],E,E,7,[[["self"]],[R[82]]]],[11,R[30],E,E,7,[[[U]],[R[28]]]],[11,R[31],E,E,7,[[],[R[28]]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[33],E,E,7,[[["self"]],[T]]],[11,R[32],E,E,7,[[["self"]],[R[34]]]],[11,R[209],E,E,7,[[["self"]],["fail"]]],[11,"fmt",E,E,0,[[["self"],[R[83]]],[[R[28],["error"]],["error"]]]],[11,"source",E,E,0,[[["self"]],[["error"],[R[5],["error"]]]]],[11,"clone",E,E,14,[[["self"]],[R[13]]]],[11,"hash",E,E,14,[[["self"],["__h"]]]],[11,"fmt",E,E,0,[[["self"],[R[83]]],[[R[28],["error"]],["error"]]]],[11,"from",E,E,0,[[[R[189]]],[R[205]]]],[11,"drop",E,E,14,[[["self"]]]],[11,"eq",E,E,14,[[["self"],[R[13]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[13]]],["bool"]]],[11,"resolve",E,E,12,[[["self"],["str"]],[[R[5],["export"]],["export"]]]],[11,"resolve",E,E,16,[[["self"],["str"]],[[R[5],["export"]],["export"]]]],[11,"drop",E,E,9,[[["self"]]]],[11,"into",E,E,1,[[],["validatingparserconfig"]]],[11,R[19],E,E,1,[[],[R[192]]]],[11,"clone",E,E,4,[[["self"]],[R[210]]]],[11,"clone",E,E,5,[[["self"]],[R[14]]]],[11,"clone",E,E,1,[[["self"]],[R[192]]]],[11,"eq",E,E,4,[[["self"],[R[210]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[210]]],["bool"]]],[11,"from",E,E,2,[[[R[188]]],["self"]]],[11,"from",E,E,6,[[[R[193]]],["self"]]],[11,"from",E,E,6,[[[R[194]]],["self"]]],[11,"from",E,E,7,[[[R[137]]],["self"]]],[11,"from",E,E,7,[[[R[205]]],["self"]]],[11,"fmt",E,E,4,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,3,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,2,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,5,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,15,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,6,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,7,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,4,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,2,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,15,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,6,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,7,[[["self"],[R[83]]],[R[28]]]],[11,"source",E,E,2,[[["self"]],[[R[5],["error"]],["error"]]]],[11,"source",E,E,6,[[["self"]],[[R[5],["error"]],["error"]]]],[11,"source",E,E,7,[[["self"]],[[R[5],["error"]],["error"]]]],[11,"new",E,R[249],14,[[["box",["any"]],[R[155]],["module"],[R[203]],[R[5],["rc"]],["rc",[R[199]]],[R[202],[R[112]]],[R[202],[R[155],R[203]]],["rc",["module"]],["any"],[R[251]],["rc",[R[201]]],[R[199],[R[250]]],[R[112]]],[[R[28],[R[13],R[205]]],[R[205]],[R[13]]]]],[11,R[252],E,R[253],14,[[],[R[13]]]],[11,"vmctx",E,R[254],14,[[["self"]],[R[214]]]],[11,R[255],E,R[256],14,[[["self"]]]],[11,"module",E,R[211],14,[[["self"]],[["rc",["module"]],["module"]]]],[11,R[212],E,R[213],14,[[["self"]],["module"]]],[11,R[257],E,R[258],14,[[["self"]],[R[214]]]],[11,R[259],E,R[260],14,[[["self"]]]],[11,"lookup",E,R[261],14,[[["self"],["str"]],[[R[5],["export"]],["export"]]]],[11,R[262],E,R[263],14,[[["self"],["str"]],[[R[5],["export"]],["export"]]]],[11,R[264],E,R[265],14,[[["self"],["export"]],["export"]]],[11,R[266],E,R[267],14,[[["self"],["export"]],["export"]]],[11,"exports",E,R[268],14,[[["self"]],[["iter",[R[82],"export"]],[R[82]],["export"]]]],[11,R[269],E,R[270],14,[[["self"]],["any"]]],[11,R[122],E,R[271],14,[[["self"],[R[272]]],[R[124]]]],[11,R[273],E,R[274],14,[[["self"],["u32"],[R[124]]],[["u32"],[R[5],["u32"]]]]],[11,R[119],E,R[275],14,[[["self"],[R[276]]],[R[121]]]],[11,R[277],E,R[278],14,[[["self"],["u32"],[R[121]]],[["u32"],[R[5],["u32"]]]]],[11,R[279],E,R[280],14,[[["self"],["u32"],[R[121]]],[[R[215]],[R[5],[R[215]]]]]],[11,R[281],E,R[282],14,[[["self"],["u32"],[R[121]]],[[R[215]],[R[5],[R[215]]]]]]],"p":[[4,R[216]],[3,"Features"],[4,R[217]],[4,R[218]],[4,R[219]],[4,R[220]],[4,R[221]],[4,R[222]],[3,R[223]],[3,R[184]],[3,"Context"],[3,R[224]],[3,R[225]],[8,"Resolver"],[3,R[226]],[3,R[227]],[3,R[228]]]};
searchIndex["wasmtime_obj"]={"doc":"Object-file writing library using the wasmtime environment.","i":[[5,"emit_module","wasmtime_obj","Emits a module that has been emitted with the…",N,[[["module"],[R[145]],[R[229]],[R[230]],[R[99]]],[[R[82]],[R[28],[R[82]]]]]],[17,"VERSION",E,R[208],N,N]],"p":[]};
searchIndex["wasmtime_runtime"]={"doc":"Runtime library support for Wasmtime.","i":[[3,"Imports",R[234],"Resolved import pointers.",N,N],[12,"dependencies",E,"The set of instances that the imports depend on.",0,N],[12,R[231],E,"Resolved addresses for imported functions.",0,N],[12,"tables",E,"Resolved addresses for imported tables.",0,N],[12,"memories",E,"Resolved addresses for imported memories.",0,N],[12,"globals",E,"Resolved addresses for imported globals.",0,N],[3,R[226],E,R[232],N,N],[3,R[283],E,"An link error while instantiating a module.",N,N],[12,"0",E,E,1,N],[3,R[291],E,"Registeration for JIT image",N,N],[3,"Mmap",E,"A simple struct consisting of a page-aligned pointer to…",N,N],[3,R[292],E,"WebAssembly requires that the caller and callee signatures…",N,N],[3,R[297],E,"RAII guard for deregistering traps",N,N],[3,R[284],E,"The VM caller-checked \"anyfunc\" record, for caller-side…",N,N],[12,"func_ptr",E,"Function body.",2,N],[12,"type_index",E,"Function signature id.",2,N],[12,"vmctx",E,"Function `VMContext`.",2,N],[3,R[296],E,"The VM \"context\", which is pointed to by the `vmctx` arg…",N,N],[3,R[298],E,"A placeholder byte-sized type which is just used to…",N,N],[3,R[285],E,"An imported function.",N,N],[12,"body",E,"A pointer to the imported function body.",3,N],[12,"vmctx",E,"A pointer to the `VMContext` that owns the function.",3,N],[3,R[293],E,"The storage for a WebAssembly global defined within the…",N,N],[3,R[286],E,R[233],N,N],[12,"from",E,"A pointer to the imported global variable description.",4,N],[3,R[295],E,"The storage for a WebAssembly invocation argument",N,N],[3,R[287],E,R[233],N,N],[12,"base",E,"The start address.",5,N],[12,"current_length",E,"The current logical size of this linear memory in bytes.",5,N],[3,R[288],E,R[233],N,N],[12,"from",E,"A pointer to the imported memory description.",6,N],[12,"vmctx",E,"A pointer to the `VMContext` that owns the memory…",6,N],[3,R[294],E,"An index into the shared signature registry, usable for…",N,N],[3,R[289],E,R[233],N,N],[12,"base",E,"Pointer to the table data.",7,N],[12,"current_elements",E,"The current number of elements in the table.",7,N],[3,R[290],E,R[233],N,N],[12,"from",E,"A pointer to the imported table description.",8,N],[12,"vmctx",E,"A pointer to the `VMContext` that owns the table…",8,N],[4,"Export",E,"The value of an export passed from one instance to another.",N,N],[13,"Function",E,"A function export value.",9,N],[12,"address",R[235],"The address of the native-code function.",9,N],[12,"vmctx",E,R[236],9,N],[12,R[110],E,"The function signature declaration, used for compatibilty…",9,N],[13,"Table",R[234],"A table export value.",9,N],[12,R[237],R[235],"The address of the table descriptor.",9,N],[12,"vmctx",E,R[236],9,N],[12,"table",E,"The table declaration, used for compatibilty checking.",9,N],[13,R[1],R[234],"A memory export value.",9,N],[12,R[237],R[235],"The address of the memory descriptor.",9,N],[12,"vmctx",E,R[236],9,N],[12,R[80],E,"The memory declaration, used for compatibilty checking.",9,N],[13,R[0],R[234],"A global export value.",9,N],[12,R[237],R[235],"The address of the global storage.",9,N],[12,"vmctx",E,R[236],9,N],[12,R[8],E,"The global declaration, used for compatibilty checking.",9,N],[4,R[216],R[234],R[238],N,N],[13,"Resource",E,R[239],10,N],[13,"Link",E,R[240],10,N],[13,R[241],E,R[108],10,N],[5,"wasmtime_init_eager",E,"This function performs the low-overhead signal handler…",N,[[]]],[5,"wasmtime_init_finish",E,"Assuming `EnsureEagerProcessSignalHandlers` has already…",N,[[[R[214]]]]],[5,"get_mut_trap_registry",E,"Gets guarded writable reference to traps registry",N,[[],[[R[242]],["rwlockwriteguard",[R[242]]]]]],[5,"get_trap_registry",E,"Gets guarded readable reference to traps registry",N,[[],[["rwlockreadguard",[R[242]]],[R[242]]]]],[5,"wasmtime_call",E,"Call the wasm function pointed to by `callee`, which has…",N,[[],[[R[82]],[R[28],[R[82]]]]]],[5,"wasmtime_call_trampoline",E,"Call the wasm function pointed to by `callee`.…",N,[[],[[R[82]],[R[28],[R[82]]]]]],[11,"function",E,"Construct a function export value.",9,[[[R[110]]],["self"]]],[11,"table",E,"Construct a table export value.",9,[[[R[243]]],["self"]]],[11,R[80],E,"Construct a memory export value.",9,[[[R[244]]],["self"]]],[11,R[8],E,"Construct a global export value.",9,[[[R[8]]],["self"]]],[11,"new",E,"Construct a new `Imports` instance.",0,[[[R[113],[R[125],R[248]]],[R[118]],["hashset",[R[13]]],[R[13]],[R[245]],[R[113],[R[120],R[245]]],[R[246]],[R[120]],[R[113],[R[123],R[247]]],[R[113],[R[118],R[246]]],[R[123]],[R[247]],[R[125]],[R[248]]],["self"]]],[11,"none",E,"Construct a new `Imports` instance with no imports.",0,[[],["self"]]],[11,"new",E,R[249],11,[[["rc",[R[199]]],[R[112]],["rc",["module"]],[R[155]],[R[5],["rc"]],[R[202],[R[112]]],["module"],["box",["any"]],[R[199],[R[250]]],[R[251]],["any"],[R[203]],[R[202],[R[155],R[203]]],["rc",[R[201]]]],[[R[205]],[R[28],[R[205]]]]]],[11,R[252],E,R[253],11,[[],["self"]]],[11,"vmctx",E,R[254],11,[[["self"]],[R[214]]]],[11,R[255],E,R[256],11,[[["self"]]]],[11,"module",E,R[211],11,[[["self"]],[["module"],["rc",["module"]]]]],[11,R[212],E,R[213],11,[[["self"]],["module"]]],[11,R[257],E,R[258],11,[[["self"]],[R[214]]]],[11,R[259],E,R[260],11,[[["self"]]]],[11,"lookup",E,R[261],11,[[["self"],["str"]],[[R[5],["export"]],["export"]]]],[11,R[262],E,R[263],11,[[["self"],["str"]],[[R[5],["export"]],["export"]]]],[11,R[264],E,R[265],11,[[["self"],["export"]],["export"]]],[11,R[266],E,R[267],11,[[["self"],["export"]],["export"]]],[11,"exports",E,R[268],11,[[["self"]],[["iter",[R[82],"export"]],[R[82]],["export"]]]],[11,R[269],E,R[270],11,[[["self"]],["any"]]],[11,R[122],E,R[271],11,[[["self"],[R[272]]],[R[124]]]],[11,R[273],E,R[274],11,[[["self"],["u32"],[R[124]]],[[R[5],["u32"]],["u32"]]]],[11,R[119],E,R[275],11,[[["self"],[R[276]]],[R[121]]]],[11,R[277],E,R[278],11,[[["self"],[R[121]],["u32"]],[[R[5],["u32"]],["u32"]]]],[11,R[279],E,R[280],11,[[["self"],[R[121]],["u32"]],[[R[215]],[R[5],[R[215]]]]]],[11,R[281],E,R[282],11,[[["self"],[R[121]],["u32"]],[[R[215]],[R[5],[R[215]]]]]],[11,"register",E,"Registers JIT image using __jit_debug_register_code",12,[[["vec",["u8"]],["u8"]],["self"]]],[11,"file",E,"JIT image used in registration",12,[[["self"]]]],[11,"new",E,"Construct a new empty instance of `Mmap`.",13,[[],["self"]]],[11,"with_at_least",E,"Create a new `Mmap` pointing to at least `size` bytes of…",13,[[["usize"]],[[R[82]],[R[28],[R[82]]]]]],[11,"accessible_reserved",E,"Create a new `Mmap` pointing to `accessible_size` bytes of…",13,[[["usize"]],[[R[82]],[R[28],[R[82]]]]]],[11,"make_accessible",E,"Make the memory starting at `start` and extending for…",13,[[["self"],["usize"]],[[R[82]],[R[28],[R[82]]]]]],[11,"as_slice",E,"Return the allocated memory as a slice of u8.",13,[[["self"]]]],[11,"as_mut_slice",E,"Return the allocated memory as a mutable slice of u8.",13,[[["self"]]]],[11,"as_ptr",E,"Return the allocated memory as a pointer to u8.",13,[[["self"]]]],[11,"as_mut_ptr",E,"Return the allocated memory as a mutable pointer to u8.",13,[[["self"]]]],[11,"len",E,"Return the length of the allocated memory.",13,[[["self"]],["usize"]]],[11,"new",E,"Create a new `SignatureRegistry`.",14,[[],["self"]]],[11,"register",E,"Register a signature and return its unique index.",14,[[["self"],[R[110]]],[R[203]]]],[11,"new",E,"Construct a `VMGlobalDefinition`.",15,[[],["self"]]],[11,"as_i32",E,"Return a reference to the value as an i32.",15,[[["self"]],["i32"]]],[11,"as_i32_mut",E,"Return a mutable reference to the value as an i32.",15,[[["self"]],["i32"]]],[11,"as_u32",E,"Return a reference to the value as a u32.",15,[[["self"]],["u32"]]],[11,"as_u32_mut",E,"Return a mutable reference to the value as an u32.",15,[[["self"]],["u32"]]],[11,"as_i64",E,"Return a reference to the value as an i64.",15,[[["self"]],["i64"]]],[11,"as_i64_mut",E,"Return a mutable reference to the value as an i64.",15,[[["self"]],["i64"]]],[11,"as_u64",E,"Return a reference to the value as an u64.",15,[[["self"]],["u64"]]],[11,"as_u64_mut",E,"Return a mutable reference to the value as an u64.",15,[[["self"]],["u64"]]],[11,"as_f32",E,"Return a reference to the value as an f32.",15,[[["self"]],["f32"]]],[11,"as_f32_mut",E,"Return a mutable reference to the value as an f32.",15,[[["self"]],["f32"]]],[11,"as_f32_bits",E,"Return a reference to the value as f32 bits.",15,[[["self"]],["u32"]]],[11,"as_f32_bits_mut",E,"Return a mutable reference to the value as f32 bits.",15,[[["self"]],["u32"]]],[11,"as_f64",E,"Return a reference to the value as an f64.",15,[[["self"]],["f64"]]],[11,"as_f64_mut",E,"Return a mutable reference to the value as an f64.",15,[[["self"]],["f64"]]],[11,"as_f64_bits",E,"Return a reference to the value as f64 bits.",15,[[["self"]],["u64"]]],[11,"as_f64_bits_mut",E,"Return a mutable reference to the value as f64 bits.",15,[[["self"]],["u64"]]],[11,"as_u128",E,"Return a reference to the value as an u128.",15,[[["self"]],["u128"]]],[11,"as_u128_mut",E,"Return a mutable reference to the value as an u128.",15,[[["self"]],["u128"]]],[11,"as_u128_bits",E,"Return a reference to the value as u128 bits.",15,[[["self"]]]],[11,"as_u128_bits_mut",E,"Return a mutable reference to the value as u128 bits.",15,[[["self"]]]],[11,"new",E,"Create a new `VMSharedSignatureIndex`.",16,[[["u32"]],["self"]]],[11,"new",E,"Create a new invocation argument filled with zeroes",17,[[],["self"]]],[11,R[269],E,"Return a mutable reference to the host state associated…",18,[[["self"]],["any"]]],[11,"lookup_global_export",E,"Lookup an export in the global exports namespace.",18,[[["self"],["str"]],[["export"],[R[5],["export"]]]]],[0,"libcalls",E,"Runtime library calls. Note that wasm compilers may…",N,N],[5,"wasmtime_f32_ceil","wasmtime_runtime::libcalls","Implementation of f32.ceil",N,[[["f32"]],["f32"]]],[5,"wasmtime_f32_floor",E,"Implementation of f32.floor",N,[[["f32"]],["f32"]]],[5,"wasmtime_f32_trunc",E,"Implementation of f32.trunc",N,[[["f32"]],["f32"]]],[5,"wasmtime_f32_nearest",E,"Implementation of f32.nearest",N,[[["f32"]],["f32"]]],[5,"wasmtime_f64_ceil",E,"Implementation of f64.ceil",N,[[["f64"]],["f64"]]],[5,"wasmtime_f64_floor",E,"Implementation of f64.floor",N,[[["f64"]],["f64"]]],[5,"wasmtime_f64_trunc",E,"Implementation of f64.trunc",N,[[["f64"]],["f64"]]],[5,"wasmtime_f64_nearest",E,"Implementation of f64.nearest",N,[[["f64"]],["f64"]]],[5,"wasmtime_memory32_grow",E,"Implementation of memory.grow for locally-defined 32-bit…",N,[[["u32"]],["u32"]]],[5,"wasmtime_imported_memory32_grow",E,"Implementation of memory.grow for imported 32-bit memories.",N,[[["u32"]],["u32"]]],[5,"wasmtime_memory32_size",E,"Implementation of memory.size for locally-defined 32-bit…",N,[[["u32"]],["u32"]]],[5,"wasmtime_imported_memory32_size",E,"Implementation of memory.size for imported 32-bit memories.",N,[[["u32"]],["u32"]]],[17,"VERSION",R[234],R[208],N,N],[11,R[35],E,E,0,[[["self"]],[T]]],[11,R[36],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[30],E,E,0,[[[U]],[R[28]]]],[11,R[31],E,E,0,[[],[R[28]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[33],E,E,0,[[["self"]],[T]]],[11,R[32],E,E,0,[[["self"]],[R[34]]]],[11,R[35],E,E,11,[[["self"]],[T]]],[11,R[36],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[30],E,E,11,[[[U]],[R[28]]]],[11,R[31],E,E,11,[[],[R[28]]]],[11,R[29],E,E,11,[[["self"]],[T]]],[11,R[33],E,E,11,[[["self"]],[T]]],[11,R[32],E,E,11,[[["self"]],[R[34]]]],[11,R[138],E,E,11,[[["self"],["k"]],["bool"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[37],E,E,1,[[["self"]],[R[82]]]],[11,R[30],E,E,1,[[[U]],[R[28]]]],[11,R[31],E,E,1,[[],[R[28]]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[33],E,E,1,[[["self"]],[T]]],[11,R[32],E,E,1,[[["self"]],[R[34]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[30],E,E,12,[[[U]],[R[28]]]],[11,R[31],E,E,12,[[],[R[28]]]],[11,R[29],E,E,12,[[["self"]],[T]]],[11,R[33],E,E,12,[[["self"]],[T]]],[11,R[32],E,E,12,[[["self"]],[R[34]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[30],E,E,13,[[[U]],[R[28]]]],[11,R[31],E,E,13,[[],[R[28]]]],[11,R[29],E,E,13,[[["self"]],[T]]],[11,R[33],E,E,13,[[["self"]],[T]]],[11,R[32],E,E,13,[[["self"]],[R[34]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[30],E,E,14,[[[U]],[R[28]]]],[11,R[31],E,E,14,[[],[R[28]]]],[11,R[29],E,E,14,[[["self"]],[T]]],[11,R[33],E,E,14,[[["self"]],[T]]],[11,R[32],E,E,14,[[["self"]],[R[34]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[30],E,E,19,[[[U]],[R[28]]]],[11,R[31],E,E,19,[[],[R[28]]]],[11,R[29],E,E,19,[[["self"]],[T]]],[11,R[33],E,E,19,[[["self"]],[T]]],[11,R[32],E,E,19,[[["self"]],[R[34]]]],[11,R[35],E,E,2,[[["self"]],[T]]],[11,R[36],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[30],E,E,2,[[[U]],[R[28]]]],[11,R[31],E,E,2,[[],[R[28]]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[33],E,E,2,[[["self"]],[T]]],[11,R[32],E,E,2,[[["self"]],[R[34]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[30],E,E,18,[[[U]],[R[28]]]],[11,R[31],E,E,18,[[],[R[28]]]],[11,R[29],E,E,18,[[["self"]],[T]]],[11,R[33],E,E,18,[[["self"]],[T]]],[11,R[32],E,E,18,[[["self"]],[R[34]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[30],E,E,20,[[[U]],[R[28]]]],[11,R[31],E,E,20,[[],[R[28]]]],[11,R[29],E,E,20,[[["self"]],[T]]],[11,R[33],E,E,20,[[["self"]],[T]]],[11,R[32],E,E,20,[[["self"]],[R[34]]]],[11,R[35],E,E,3,[[["self"]],[T]]],[11,R[36],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[30],E,E,3,[[[U]],[R[28]]]],[11,R[31],E,E,3,[[],[R[28]]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[33],E,E,3,[[["self"]],[T]]],[11,R[32],E,E,3,[[["self"]],[R[34]]]],[11,R[35],E,E,15,[[["self"]],[T]]],[11,R[36],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[30],E,E,15,[[[U]],[R[28]]]],[11,R[31],E,E,15,[[],[R[28]]]],[11,R[29],E,E,15,[[["self"]],[T]]],[11,R[33],E,E,15,[[["self"]],[T]]],[11,R[32],E,E,15,[[["self"]],[R[34]]]],[11,R[35],E,E,4,[[["self"]],[T]]],[11,R[36],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[30],E,E,4,[[[U]],[R[28]]]],[11,R[31],E,E,4,[[],[R[28]]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[33],E,E,4,[[["self"]],[T]]],[11,R[32],E,E,4,[[["self"]],[R[34]]]],[11,R[35],E,E,17,[[["self"]],[T]]],[11,R[36],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[30],E,E,17,[[[U]],[R[28]]]],[11,R[31],E,E,17,[[],[R[28]]]],[11,R[29],E,E,17,[[["self"]],[T]]],[11,R[33],E,E,17,[[["self"]],[T]]],[11,R[32],E,E,17,[[["self"]],[R[34]]]],[11,R[35],E,E,5,[[["self"]],[T]]],[11,R[36],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[30],E,E,5,[[[U]],[R[28]]]],[11,R[31],E,E,5,[[],[R[28]]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[33],E,E,5,[[["self"]],[T]]],[11,R[32],E,E,5,[[["self"]],[R[34]]]],[11,R[35],E,E,6,[[["self"]],[T]]],[11,R[36],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[30],E,E,6,[[[U]],[R[28]]]],[11,R[31],E,E,6,[[],[R[28]]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[33],E,E,6,[[["self"]],[T]]],[11,R[32],E,E,6,[[["self"]],[R[34]]]],[11,R[35],E,E,16,[[["self"]],[T]]],[11,R[36],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[30],E,E,16,[[[U]],[R[28]]]],[11,R[31],E,E,16,[[],[R[28]]]],[11,R[29],E,E,16,[[["self"]],[T]]],[11,R[33],E,E,16,[[["self"]],[T]]],[11,R[32],E,E,16,[[["self"]],[R[34]]]],[11,R[138],E,E,16,[[["self"],["k"]],["bool"]]],[11,R[35],E,E,7,[[["self"]],[T]]],[11,R[36],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[30],E,E,7,[[[U]],[R[28]]]],[11,R[31],E,E,7,[[],[R[28]]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[33],E,E,7,[[["self"]],[T]]],[11,R[32],E,E,7,[[["self"]],[R[34]]]],[11,R[35],E,E,8,[[["self"]],[T]]],[11,R[36],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[30],E,E,8,[[[U]],[R[28]]]],[11,R[31],E,E,8,[[],[R[28]]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[33],E,E,8,[[["self"]],[T]]],[11,R[32],E,E,8,[[["self"]],[R[34]]]],[11,R[35],E,E,9,[[["self"]],[T]]],[11,R[36],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[30],E,E,9,[[[U]],[R[28]]]],[11,R[31],E,E,9,[[],[R[28]]]],[11,R[29],E,E,9,[[["self"]],[T]]],[11,R[33],E,E,9,[[["self"]],[T]]],[11,R[32],E,E,9,[[["self"]],[R[34]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[37],E,E,10,[[["self"]],[R[82]]]],[11,R[30],E,E,10,[[[U]],[R[28]]]],[11,R[31],E,E,10,[[],[R[28]]]],[11,R[29],E,E,10,[[["self"]],[T]]],[11,R[33],E,E,10,[[["self"]],[T]]],[11,R[32],E,E,10,[[["self"]],[R[34]]]],[11,"drop",E,E,11,[[["self"]]]],[11,"drop",E,E,12,[[["self"]]]],[11,"drop",E,E,13,[[["self"]]]],[11,"drop",E,E,19,[[["self"]]]],[11,R[19],E,E,16,[[],["self"]]],[11,R[19],E,E,2,[[],["self"]]],[11,"clone",E,E,9,[[["self"]],["export"]]],[11,"clone",E,E,0,[[["self"]],[R[251]]]],[11,"clone",E,E,11,[[["self"]],["self"]]],[11,"clone",E,E,3,[[["self"]],[R[246]]]],[11,"clone",E,E,8,[[["self"]],[R[245]]]],[11,"clone",E,E,6,[[["self"]],[R[247]]]],[11,"clone",E,E,4,[[["self"]],[R[248]]]],[11,"clone",E,E,5,[[["self"]],[R[272]]]],[11,"clone",E,E,7,[[["self"]],[R[276]]]],[11,"clone",E,E,15,[[["self"]],["vmglobaldefinition"]]],[11,"clone",E,E,16,[[["self"]],[R[203]]]],[11,"clone",E,E,2,[[["self"]],[R[215]]]],[11,"clone",E,E,17,[[["self"]],["vminvokeargument"]]],[11,"eq",E,E,11,[[["self"],[R[13]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[13]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[203]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[203]]],["bool"]]],[11,"from",E,E,10,[[[R[189]]],["self"]]],[11,"hash",E,E,11,[[["self"],["__h"]]]],[11,"hash",E,E,16,[[["self"],["__h"]]]],[11,"fmt",E,E,9,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,1,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,10,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,13,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,14,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,3,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,8,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,6,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,4,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,5,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,7,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,15,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,16,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,2,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,17,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,18,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,1,[[["self"],[R[83]]],[R[28]]]],[11,"fmt",E,E,10,[[["self"],[R[83]]],[R[28]]]],[11,"source",E,E,10,[[["self"]],[[R[5],["error"]],["error"]]]]],"p":[[3,"Imports"],[3,R[283]],[3,R[284]],[3,R[285]],[3,R[286]],[3,R[287]],[3,R[288]],[3,R[289]],[3,R[290]],[4,"Export"],[4,R[216]],[3,R[226]],[3,R[291]],[3,"Mmap"],[3,R[292]],[3,R[293]],[3,R[294]],[3,R[295]],[3,R[296]],[3,R[297]],[3,R[298]]]};
searchIndex["wasmtime_wasi"]={"doc":E,"i":[[5,"instantiate_wasi","wasmtime_wasi","Return an instance implementing the \"wasi\" interface.",N,[[[R[199],[R[250]]],["str"],["rc",[R[199]]]],[[R[28],[R[13],R[205]]],[R[13]],[R[205]]]]]],"p":[]};
searchIndex["wasmtime_wast"]={"doc":"Implementation of the WAST text format for wasmtime.","i":[[3,R[300],"wasmtime_wast","The wast test script language allows modules to be defined…",N,N],[5,"instantiate_spectest",E,"Return an instance implementing the \"spectest\" interface…",N,[[],[[R[205]],[R[13]],[R[28],[R[13],R[205]]]]]],[11,"new",E,"Construct a new instance of `WastContext`.",0,[[["box",[R[191]]],[R[191]]],["self"]]],[11,R[299],E,"Construct a new instance with the given features using the…",0,[[[R[192]]],["self"]]],[11,"register_spectest",E,"Register \"spectest\" which is used by the spec testsuite.",0,[[["self"]],[R[28]]]],[11,"run_buffer",E,"Run a wast script from a byte buffer.",0,[[["self"],["str"]],[R[28]]]],[11,"run_file",E,"Run a wast script from a file.",0,[[["self"],["path"]],[R[28]]]],[17,"VERSION",E,R[208],N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[30],E,E,0,[[[U]],[R[28]]]],[11,R[31],E,E,0,[[],[R[28]]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[33],E,E,0,[[["self"]],[T]]],[11,R[32],E,E,0,[[["self"]],[R[34]]]]],"p":[[3,R[300]]]};
searchIndex["wast"]={"doc":"CLI tool to run wast tests using the wasmtime libraries.","i":[],"p":[]};
initSearch(searchIndex);addSearchOptions(searchIndex);